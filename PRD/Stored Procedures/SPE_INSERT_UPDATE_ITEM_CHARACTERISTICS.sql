-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Vitek 2020
-- Author: Juan De Dios Pérez
-- Revisor: Frncisco Javier Oñate Manrique
-- CRETAE date: 23/03/2017, UPDATE date: 28/03/2020
-- Description: Insert or update the characteristics item
-- =============================================

CREATE PROCEDURE    [PRD].[SPE_INSERT_UPDATE_ITEM_CHARACTERISTICS] 
    	    @XML_RESULT XML = '' OUT ,    -- --0 TO ERROR AND 1 TO CORRECT
			@PIN_ID_ITEM AS int = NULL,
			@PIN_ID_METRICS AS int = NULL,
			@PIN_XML_CHARACTERISTICS XML=NULL

		  , @PIN_KY_USER_APP_CREATE AS nvarchar(50)
		  , @PIN_KY_USER_APP_UPDATE AS nvarchar(50)
		  , @PIN_NM_PROGRAM_CREATE AS nvarchar(50)
		  , @PIN_NM_PROGRAM_UPDATE AS nvarchar(50)
		  , @PIN_TYPE_TRANSACTION CHAR(1) --I=INSERT   U=UPDATE  D=DELETE

AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
	,@DT_SYSTEM DATETIME = GETDATE()

    	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF THE SPE IS GOING TO EXECUTE A UPDATE OR INSERT
		IF @PIN_TYPE_TRANSACTION='U'
	    	BEGIN
				update	PRD.C_ITEM_CHARACTERISTIC set
				XML_FIELD_SETTINGS = @PIN_XML_CHARACTERISTICS,DT_UPDATE = @DT_SYSTEM,KY_USER_APP_UPDATE = @PIN_KY_USER_APP_UPDATE,NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
				where ID_ITEM = @PIN_ID_ITEM and ID_METRICS = @PIN_ID_METRICS
			END 
		ELSE IF @PIN_TYPE_TRANSACTION='I'
			BEGIN
			insert into PRD.C_ITEM_CHARACTERISTIC
			(ID_ITEM,ID_METRICS,XML_FIELD_SETTINGS,DT_CREATION,DT_UPDATE,KY_USER_APP_CREATION,KY_USER_APP_UPDATE,NM_PROGAM_CREATE,NM_PROGRAM_UPDATE)
			values  (@PIN_ID_ITEM,@PIN_ID_METRICS,@PIN_XML_CHARACTERISTICS,@DT_SYSTEM,null,@PIN_KY_USER_APP_CREATE,@PIN_KY_USER_APP_UPDATE,@PIN_NM_PROGRAM_CREATE,@PIN_NM_PROGRAM_UPDATE)
			END
		ELSE IF @PIN_TYPE_TRANSACTION='D'
			BEGIN
			delete from PRD.C_ITEM_CHARACTERISTIC where ID_ITEM = @PIN_ID_ITEM and ID_METRICS = @PIN_ID_METRICS
			END
		-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
		print(@V_EXIST_TRAN)
		print(@@TRANCOUNT)
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
			set @V_EXIST_TRAN = 0
		END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register')
		
			
	END CATCH
END

