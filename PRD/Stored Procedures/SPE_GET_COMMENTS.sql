-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CREATE date: 07/04/2017
-- Description: get all pallets comments
-- =============================================
-- MODIFY: the work order coments add to view i the same module and column add to dentify type origin comment (skid, work order)
-- 10/10/2018 JDR The query is rewritten to include comments made in the inspection, in addition to avoiding duplicate comments
-- =============================================

CREATE PROCEDURE    [PRD].[SPE_GET_COMMENTS]
	    @PIN_ID_COMMENT INT,
	    @PIN_ID_PALLET INT,
		@PIN_ID_WORK_ORDER INT,
		@PIN_ID_BRANCH_PLANT INT,
		@PIN_KY_TYPE_COMMENT NVARCHAR(50),
		@PIN_ID_QA27 INT
AS   

	; WITH T_SKID_COMMENT AS (
		SELECT 'SKID' COMMENT_TO
			, PC.ID_PALLET_COMMENT
			, KP.ID_PALLET
			, KP.ID_WORK_ORDER
			, KP.NO_PALLET
			, KP.KY_STATUS AS KY_STATUS_PALLET
			, PC.DS_COMMENT
			, PC.DT_COMMENT
			, KWO.NO_WORK_ORDER
			, KWO.NM_PRODUCTION_LINE
			, KWO.KY_STATUS AS KY_STATUS_WORK_ORDER
			, CU.NM_USER
		FROM PRD.K_PALLET KP
			INNER JOIN PRD.K_PALLET_COMMENT PC 
				ON PC.ID_PALLET = KP.ID_PALLET
			INNER JOIN PRD.K_WORK_ORDER KWO 
				ON KP.ID_WORK_ORDER = KWO.ID_WORK_ORDER
			INNER JOIN ADM.C_USER CU 
				ON PC.KY_USER_APP_CREATION = CU.KY_USER
		WHERE KP.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
			AND (@PIN_ID_QA27 IS NULL OR (@PIN_ID_QA27 IS NOT NULL AND @PIN_ID_QA27 = KP.ID_QA27))
	), T_WORK_ORDER_COMMENT AS (
		SELECT KY_TYPE_COMMENT AS COMMENT_TO
			, WOC.ID_WORK_ORDER_COMMENT
			, NULL AS ID_PALLET 
			, WOC.ID_WORK_ORDER
			, null  NO_PALLET
			, 'N/A' KY_STATUS_PALLET
			, WOC.DS_COMMENT
			, WOC.DT_COMMENT
			, WO.NO_WORK_ORDER
			, WO.NM_PRODUCTION_LINE
			, WO.KY_STATUS	
			, CU.NM_USER
		FROM PRD.K_WORK_ORDER_COMMENT WOC 
			INNER JOIN PRD.K_WORK_ORDER WO 
				ON WOC.ID_WORK_ORDER = WO.ID_WORK_ORDER
				AND WOC.FG_ACTIVE = 1
			INNER JOIN ADM.C_USER CU 
				ON WOC.KY_USER_APP_CREATION = CU.KY_USER
		WHERE WO.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
	), T_INSPECTOR_COMMENT AS (
		SELECT 'INSPECTOR' AS COMMENT_TO
			, KIS.ID_INSPECTION_SKID AS ID_COMMENT
			, KP.ID_PALLET
			, KIS.ID_WORK_ORDER
			, KIS.NO_PALLET
			, ISNULL(KP.KY_STATUS, KIS.KY_STATUS) AS KY_STATUS_PALLET
			, KIS.DS_EXPLANATION_AGREEMENT AS DS_COMMENT
			, KIS.DT_INSPECTOR_AGREEMENT AS DT_COMMENT
			, KIS.ID_WORK_ORDER AS NO_WORK_ORDER
			, CPL.NM_PRODUCTION_LINE
			, KWO.KY_STATUS AS KY_STATUS_WORK_ORDER
			, (SELECT NM_USER FROM ADM.C_USER WHERE KY_USER =  KIS.KY_USER_INSPECTOR) AS NM_USER
		FROM PRD.K_INSPECTION_SKID KIS
			INNER JOIN PRD.K_WORK_ORDER KWO
				ON KIS.ID_WORK_ORDER = KWO.ID_WORK_ORDER
				AND KIS.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
			INNER JOIN PRD.C_PRODUCTION_LINE CPL
				ON KWO.ID_PRODUCTION_LINE = CPL.ID_PRODUCTION_LINE
			LEFT JOIN PRD.K_PALLET KP
				ON KP.NO_PALLET = KIS.NO_PALLET
				AND KP.ID_WORK_ORDER = KIS.ID_WORK_ORDER
		WHERE KIS.DS_EXPLANATION_AGREEMENT IS NOT NULL 
			AND DATALENGTH(KIS.DS_EXPLANATION_AGREEMENT) > 0
			AND (@PIN_ID_QA27 IS NULL OR (@PIN_ID_QA27 IS NOT NULL AND @PIN_ID_QA27 = KP.ID_QA27))
	), T_COMMENT AS (
		SELECT * FROM T_SKID_COMMENT
		UNION ALL
		SELECT * FROM T_WORK_ORDER_COMMENT
		UNION ALL
		SELECT * FROM T_INSPECTOR_COMMENT
	)

	SELECT COMMENT_TO
		, ID_PALLET_COMMENT AS ID_COMMENT
		, ID_WORK_ORDER
		, ID_PALLET
		, NO_PALLET
		, KY_STATUS_PALLET
		, DS_COMMENT
		, DT_COMMENT
		, NO_WORK_ORDER
		, NM_PRODUCTION_LINE
		, KY_STATUS_WORK_ORDER
		, NM_USER
	FROM T_COMMENT
	ORDER BY DT_COMMENT DESC

