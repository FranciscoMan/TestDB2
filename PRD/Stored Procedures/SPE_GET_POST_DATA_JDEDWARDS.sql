-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio Díaz
-- CREATE date: 24/06/2018
-- Description: JD Edwards post data report
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_GET_POST_DATA_JDEDWARDS]
	@PIN_DT_INITIAL DATE
	, @PIN_DT_FINAL DATE
	, @PIN_ID_BRANCH_PLANT INT
AS   
BEGIN

	IF @PIN_ID_BRANCH_PLANT IS NULL
		SET @PIN_ID_BRANCH_PLANT = 1

	DECLARE @ID_WEIGHT_METRIC INT
		  , @ID_LINE_RATE_METRIC INT
		  , @ID_WEB_WIDTH_METRIC INT
		  , @ID_DIE_PUMP_METRIC INT
		  , @ID_LENGTH_METRIC INT
		  , @ID_WIDTH_METRIC INT

	SELECT TOP 1  @ID_WEIGHT_METRIC = ID_WEIGHT_METRIC
				, @ID_LINE_RATE_METRIC = ID_LBS_PER_HOUR_METRIC
				, @ID_WEB_WIDTH_METRIC = ID_WEB_WIDTH_METRIC
				, @ID_DIE_PUMP_METRIC = ID_DIE_PUMP_METRIC
				, @ID_LENGTH_METRIC = ID_LENGTH_METRIC
				, @ID_WIDTH_METRIC = ID_WIDTH_METRIC
	FROM ADM.C_BRANCH_PLANT 
	WHERE ID_BRANCH_PLANT = @PIN_ID_BRANCH_PLANT

	DECLARE @T_QA27 TABLE (
		ID_QA27 INT
		, ID_WORK_ORDER INT
		, ID_ITEM INT
		, NM_ITEM NVARCHAR(100)
		, ID_PRODUCTION_LINE INT
		, DT_INITIAL_DATE DATETIME
		, DT_FINAL_DATE DATETIME
		, KY_QA27_STATUS NVARCHAR(10)
		, KY_SHIFT NVARCHAR(2)
		, KY_SHIFT_TIME NVARCHAR(2)
		, NO_COMPLETED_QTY INT
		, KY_WORK_ORDER_STATUS NVARCHAR(10)
		, NO_SUM_MINUTES_PROD DECIMAL(13,5)
		, NO_SUM_MINUTES_DEV DECIMAL(13,5)
		, NO_SUM_MINUTES_DCHG DECIMAL(13,5)
		, NO_SUM_MINUTES_OTHER DECIMAL(13,5)
		, NO_SUM_MINUTES_RCHG DECIMAL(13,5)
		, NO_SUM_MINUTES_SMNT DECIMAL(13,5)
		, NO_SUM_MINUTES_UMNT DECIMAL(13,5)
		, NO_SUM_MINUTES_IDLE DECIMAL(13,5)
		, NO_SUM_MINUTES_LOST_TIME DECIMAL(13,5)
		, NO_SUM_MINUTES_DOWN_TIME DECIMAL(13,5)
		, NO_SUM_TOTAL DECIMAL(13,5)
		, NO_PCS_WEIGHT DECIMAL(13,5)
		, NO_EXTRUDED_LBS DECIMAL(13,5)
		, NO_RATE_LINE DECIMAL(13,5) NULL
		, NO_WEB_WIDTH DECIMAL(13,5) NULL
		, NO_DIE_PUMP DECIMAL(13,5) NULL
		, NO_WIDTH DECIMAL(13,5) NULL
		, NO_LENGTH DECIMAL(13,5) NULL
		, NO_REPORT_WIDTH DECIMAL(13,5) NULL
		, NO_REPORT_PCS INT NULL
		, NO_YIELD DECIMAL(13,5) NULL
		, NO_LOST_LBS DECIMAL(13,5) NULL
	)

	--supplying a data contract for Entity Framework
	IF 1 = 2 BEGIN
		SELECT * FROM @T_QA27 WHERE 1 = 2  
	END

	DECLARE @T_SKID TABLE (
		ID_SKID INT
		, ID_QA27 INT
		, NO_COMPLETED_QTY INT
	)

	DECLARE @T_ISSUE TABLE (
		ID_ISSUE INT
		, ID_QA27 INT
		, ID_WORK_ORDER INT
		, ID_PRODUCTION_LINE INT
		, ID_PROBLEM_AREA INT
		, ID_PROBLEM_CODE INT
		, KY_CODE_TYPE NVARCHAR(10)
		, DT_ISSUE DATETIME
		, FG_CONFIRMED BIT
		, DT_CONFIRMED DATETIME
		, DT_ISSUE_CLOSED DATETIME
		, KY_STATUS NVARCHAR(50)
		, NO_TIME_BEFORE_HELP INT
		, FG_LINE_DOWN BIT
	)

	IF OBJECT_ID('TEMPDB..#T_MINUTES') IS NULL BEGIN
		CREATE TABLE #T_MINUTES (
			ID_QA27 INT
			, ID_PRODUCTION_LINE INT
			, DT_INITIAL_DATE DATETIME
			, DT_FINAL_DATE DATETIME
			, NO_LINE_RATE DECIMAL(13,5)
			, KY_STATUS NVARCHAR(10)
			, FG_LINE_DOWN BIT
			, ID_PROBLEM_AREA INT
			, ID_PROBLEM_CODE INT
			, KY_CODE_TYPE NVARCHAR(10)
		)
		CREATE NONCLUSTERED INDEX [IX_T_MINUTES_C] ON #T_MINUTES ([ID_QA27],ID_PRODUCTION_LINE,[DT_INITIAL_DATE]) INCLUDE ([NO_LINE_RATE])
	END ELSE BEGIN
		TRUNCATE TABLE #T_MINUTES
	END

	INSERT INTO @T_QA27 (ID_QA27, ID_WORK_ORDER, ID_PRODUCTION_LINE, DT_INITIAL_DATE, DT_FINAL_DATE, KY_QA27_STATUS, KY_SHIFT, KY_SHIFT_TIME, KY_WORK_ORDER_STATUS, ID_ITEM, NM_ITEM, NO_WIDTH, NO_LENGTH)
	SELECT KQ.ID_QA27
		, KQ.ID_WORK_ORDER
		, KWO.ID_PRODUCTION_LINE
		, KQ.DT_INITIAL_TIME
		, KQ.DT_FINAL_TIME
		, KQ.KY_STATUS
		, REPLACE(KS.KY_SHIFT, 'SF-', '') AS KY_SHIFT
		, REPLACE(KS.KY_SHIFT_TIME, 'SF-', '') AS KY_SHIFT_TIME
		, KWO.KY_STATUS
		, KWO.ID_ITEM
		, KWO.NM_ITEM
		, (SELECT XML_FIELD_SETTINGS.value('(/SETTINGS/FIELD_TYPES/@NOMINAL_VALUE)[1]', 'DECIMAL(13,5)') NO_WIDTH FROM [PRD].[C_ITEM_CHARACTERISTIC] CIC WHERE XML_FIELD_SETTINGS.value('(/SETTINGS/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX' AND CIC.ID_METRICS = @ID_WIDTH_METRIC AND CIC.ID_ITEM = KWO.ID_ITEM )
		, (SELECT XML_FIELD_SETTINGS.value('(/SETTINGS/FIELD_TYPES/@NOMINAL_VALUE)[1]', 'DECIMAL(13,5)') NO_LENGTH FROM [PRD].[C_ITEM_CHARACTERISTIC] CIC WHERE XML_FIELD_SETTINGS.value('(/SETTINGS/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX' AND CIC.ID_METRICS = @ID_LENGTH_METRIC AND CIC.ID_ITEM  = KWO.ID_ITEM)
	FROM PRD.K_QA27 KQ
		INNER JOIN PRD.K_SHIFT KS ON KQ.ID_SHIFT = KS.ID_SHIFT AND KS.ID_BRANCH_PLANT = @PIN_ID_BRANCH_PLANT
		INNER JOIN PRD.K_WORK_ORDER KWO ON KQ.ID_WORK_ORDER = KWO.ID_WORK_ORDER
	WHERE CAST(DT_INITIAL_TIME AS DATE) BETWEEN @PIN_DT_INITIAL AND @PIN_DT_FINAL

	INSERT INTO @T_SKID (ID_SKID, ID_QA27, NO_COMPLETED_QTY)
	SELECT KP.ID_PALLET, KP.ID_QA27, KP.NO_QUANTITY
	FROM PRD.K_PALLET KP
		INNER JOIN ADM.VW_C_PALLET_STATUS VCPS
			ON KP.KY_STATUS = VCPS.KY_PALLET_STATUS
			AND VCPS.FG_FOR_SAVE = 1
	WHERE EXISTS (SELECT TOP 1 1 FROM @T_QA27 TQ WHERE KP.ID_QA27 = TQ.ID_QA27)

	INSERT INTO @T_ISSUE (
		ID_ISSUE
		, ID_QA27
		, ID_WORK_ORDER
		, ID_PRODUCTION_LINE
		, ID_PROBLEM_AREA
		, ID_PROBLEM_CODE
		, KY_CODE_TYPE
		, DT_ISSUE
		, FG_CONFIRMED
		, DT_CONFIRMED
		, DT_ISSUE_CLOSED
		, KY_STATUS
		, NO_TIME_BEFORE_HELP
		, FG_LINE_DOWN
	)
	SELECT KI.ID_ISSUE
		, KI.ID_QA27
		, KI.ID_WORK_ORDER
		, KI.ID_PRODUCTION_LINE
		, KI.ID_PROBLEM_AREA
		, KI.ID_PROBLEM_CODE
		, CPC.KY_CODE_TYPE
		, KI.DT_ISSUE
		, KI.FG_CONFIRMED
		, KI.DT_CONFIRMED
		, KI.DT_ISSUE_CLOSED
		, KI.KY_STATUS
		, KI.NO_TIME_BEFORE_HELP
		, KI.FG_LINE_DOWN
	FROM PRD.K_ISSUE KI
		INNER JOIN PRD.C_PROBLEM_CODE CPC
			ON KI.ID_PROBLEM_CODE = CPC.ID_PROBLEM_CODE
	WHERE EXISTS (SELECT TOP 1 1 FROM @T_QA27 TQ WHERE TQ.ID_QA27 = KI.ID_QA27)


	; WITH T_COMPLETED_QTY AS (
		SELECT ID_QA27, SUM(NO_COMPLETED_QTY) AS NO_COMPLETED_QTY
		FROM @T_SKID
		GROUP BY ID_QA27
	)

	UPDATE TQ
	SET NO_COMPLETED_QTY = ISNULL(TCQ.NO_COMPLETED_QTY, 0)
	FROM @T_QA27 TQ
		INNER JOIN T_COMPLETED_QTY TCQ
			ON TQ.ID_QA27 = TCQ.ID_QA27

	; WITH T_MINUTES AS (
		SELECT ID_QA27, ID_PRODUCTION_LINE, DT_INITIAL_DATE, DT_FINAL_DATE
		FROM @T_QA27
		UNION ALL 
		SELECT ID_QA27, ID_PRODUCTION_LINE, DATEADD(MINUTE, 1, DT_INITIAL_DATE), DT_FINAL_DATE
		FROM T_MINUTES
		WHERE DATEADD(MINUTE, 1, DT_INITIAL_DATE) <= DT_FINAL_DATE
	)

	INSERT INTO #T_MINUTES (ID_QA27, ID_PRODUCTION_LINE, DT_INITIAL_DATE, DT_FINAL_DATE)
	SELECT ID_QA27, ID_PRODUCTION_LINE, DT_INITIAL_DATE, DT_FINAL_DATE FROM T_MINUTES
	OPTION (MAXRECURSION 20000)

--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
	DECLARE @T_LINE_RATES TABLE (
		NO_LINE INT
		, ID_PRODUCTION_LINE INT
		, ID_WORK_ORDER INT
		, ID_QA27 INT
		, DT_QA27_INITIAL_TIME DATETIME
		, DT_QA27_FINAL_TIME DATETIME
		, DT_FORM_CREATION DATETIME
		, DT_NEXT_CHANGE DATETIME
		, DT_FINAL_LINE_RATE_READING DATETIME
		, NO_MINUTES_QA27 INT
		, NO_MINUTES_BETWEEN_QA27_START INT
		, NO_MINUTES_BETWEEN_READINGS INT
		, NO_LAST_VALUE DECIMAL(13,7)
		, NO_LINE_RATE_READING DECIMAL(13,7)
		, ID_K_FORM INT
	)

	INSERT INTO @T_LINE_RATES (
		NO_LINE
		, ID_PRODUCTION_LINE
		, ID_WORK_ORDER
		, ID_QA27
		, DT_QA27_INITIAL_TIME
		, DT_QA27_FINAL_TIME
		, DT_FORM_CREATION
		, DT_NEXT_CHANGE
		, NO_LAST_VALUE
		, NO_LINE_RATE_READING
		, ID_K_FORM

	)
	SELECT ROW_NUMBER() OVER (PARTITION BY KWO.ID_PRODUCTION_LINE, KQ.ID_QA27 ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION) AS NO_LINE
		, KWO.ID_PRODUCTION_LINE
		, KWO.ID_WORK_ORDER
		, TS.ID_QA27
		, KQ.DT_INITIAL_TIME AS DT_QA27_INITIAL_TIME
		, KQ.DT_FINAL_TIME AS DT_QA27_FINAL_TIME
		, KF.DT_CREATION AS DT_FORM_CREATION
		, LEAD (KF.DT_CREATION) OVER (PARTITION BY KWO.ID_PRODUCTION_LINE ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION) AS DT_NEXT_CHANGE
		, ISNULL(LAG (XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)')) OVER (PARTITION BY KWO.ID_PRODUCTION_LINE ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION), (SELECT TOP 1 KFM1.XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') FROM PRD.K_FORM KF1 INNER JOIN PRD.K_FORM_METRICS KFM1 ON KF1.ID_K_FORM = KFM1.ID_K_FORM AND KFM1.ID_METRICS = @ID_LINE_RATE_METRIC AND KF1.KY_PROCESS_TYPE = 'PROCESS' AND KF1.KY_STATUS_FORM = 'CAPTURED' AND KF1.DT_CREATION < KF.DT_CREATION ORDER BY KF1.DT_CREATION DESC)) AS NO_LAST_VALUE
		, XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') AS NO_LINE_RATE_READING
		, KF.ID_K_FORM
	FROM PRD.K_FORM KF
		INNER JOIN @T_SKID TS
			ON KF.ID_PALLET = TS.ID_SKID
			AND KF.KY_STATUS_FORM = 'CAPTURED'
			AND KF.KY_PROCESS_TYPE = 'PROCESS'
		INNER JOIN PRD.K_QA27 KQ
			ON KQ.ID_QA27 = TS.ID_QA27
		INNER JOIN PRD.K_WORK_ORDER KWO
			ON KQ.ID_WORK_ORDER = KWO.ID_WORK_ORDER
		INNER JOIN PRD.K_FORM_METRICS KFM
			ON KF.ID_K_FORM = KFM.ID_K_FORM
			AND KFM.ID_METRICS = @ID_LINE_RATE_METRIC
			AND XML_METRICS_VALUE.value('(/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX'

	UPDATE @T_LINE_RATES
	SET NO_MINUTES_QA27 = DATEDIFF(MINUTE, DT_QA27_INITIAL_TIME, DT_QA27_FINAL_TIME)
		, NO_MINUTES_BETWEEN_QA27_START = CASE WHEN NO_LINE = 1 THEN DATEDIFF(MINUTE, DT_QA27_INITIAL_TIME, DT_FORM_CREATION) ELSE 0 END
		, NO_MINUTES_BETWEEN_READINGS = CASE WHEN DT_NEXT_CHANGE > DT_QA27_FINAL_TIME THEN DATEDIFF(MINUTE, DT_FORM_CREATION, DT_QA27_FINAL_TIME) ELSE DATEDIFF(MINUTE, DT_FORM_CREATION, DT_NEXT_CHANGE) END
		, DT_FINAL_LINE_RATE_READING = CASE WHEN DT_NEXT_CHANGE > DT_QA27_FINAL_TIME THEN DT_QA27_FINAL_TIME ELSE DT_NEXT_CHANGE END

	INSERT INTO @T_LINE_RATES (ID_PRODUCTION_LINE, ID_WORK_ORDER, ID_QA27, DT_QA27_INITIAL_TIME, DT_QA27_FINAL_TIME, NO_MINUTES_QA27)
	SELECT TQ.ID_PRODUCTION_LINE, TQ.ID_WORK_ORDER, TQ.ID_QA27, TQ.DT_INITIAL_DATE, TQ.DT_FINAL_DATE, DATEDIFF(MINUTE, TQ.DT_INITIAL_DATE, TQ.DT_FINAL_DATE)
	FROM @T_QA27 TQ
	WHERE NOT EXISTS (SELECT TOP 1 1 FROM @T_LINE_RATES TLR WHERE TLR.ID_QA27 = TQ.ID_QA27)
	
	UPDATE TLR
	SET NO_LINE_RATE_READING = (CASE WHEN TLR.NO_LINE_RATE_READING IS NULL THEN (SELECT TOP 1 NO_LINE_RATE_READING FROM @T_LINE_RATES TLR1 WHERE TLR1.NO_LINE_RATE_READING IS NOT NULL AND TLR1.ID_PRODUCTION_LINE = TLR.ID_PRODUCTION_LINE AND TLR1.DT_QA27_INITIAL_TIME < TLR.DT_QA27_INITIAL_TIME ORDER BY TLR1.DT_QA27_INITIAL_TIME DESC) ELSE NULL END)
	FROM @T_LINE_RATES TLR
	WHERE TLR.NO_LINE IS NULL

	UPDATE TLR
	SET NO_LINE_RATE_READING = (SELECT TOP 1 XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') FROM PRD.K_FORM_METRICS KFM INNER JOIN PRD.K_FORM KF ON KF.ID_K_FORM = KFM.ID_K_FORM AND KFM.ID_METRICS = @ID_LINE_RATE_METRIC AND KF.KY_STATUS_FORM = 'CAPTURED' AND KF.KY_PROCESS_TYPE = 'PROCESS' AND KF.ID_PRODUCTION_LINE = TLR.ID_PRODUCTION_LINE ORDER BY KF.DT_FORM DESC)
	FROM @T_LINE_RATES TLR
	WHERE NO_LINE_RATE_READING IS NULL


	/********** CÓDIGO AGREGADO POR GABRIEL VÁZQUEZ ***************/

	UPDATE T1
	SET NO_RATE_LINE = T2.NO_LINE_RATE_READING
	FROM @T_QA27 T1
		INNER JOIN @T_LINE_RATES T2 ON T1.ID_PRODUCTION_LINE = T2.ID_PRODUCTION_LINE AND T1.ID_WORK_ORDER = T2.ID_WORK_ORDER AND T1.ID_QA27 = T2.ID_QA27
	WHERE T2.NO_LINE = 1	

	UPDATE T1
	SET NO_RATE_LINE = T2.NO_LINE_RATE_READING
	FROM @T_QA27 T1
		INNER JOIN @T_LINE_RATES T2 ON T1.ID_PRODUCTION_LINE = T2.ID_PRODUCTION_LINE AND T1.ID_WORK_ORDER = T2.ID_WORK_ORDER AND T1.ID_QA27 = T2.ID_QA27
	WHERE T2.NO_LINE IS NULL

	/********** TERMINA CÓDIGO AGREGADO POR GABRIEL VÁZQUEZ ***************/




	UPDATE TM
	SET NO_LINE_RATE = TLR.NO_LINE_RATE_READING
		, KY_STATUS = 'READING'
	FROM #T_MINUTES TM
		INNER JOIN @T_LINE_RATES TLR
			ON TM.ID_QA27 = TLR.ID_QA27
			AND TM.DT_INITIAL_DATE BETWEEN TLR.DT_FORM_CREATION AND TLR.DT_FINAL_LINE_RATE_READING

	UPDATE TM
	SET NO_LINE_RATE = TLR.NO_LAST_VALUE
		, KY_STATUS = 'FIRST'
	FROM #T_MINUTES TM
		INNER JOIN @T_LINE_RATES TLR
			ON TM.ID_QA27 = TLR.ID_QA27	
			AND TLR.NO_LINE = 1
			AND TM.DT_INITIAL_DATE BETWEEN TLR.DT_QA27_INITIAL_TIME AND TLR.DT_FORM_CREATION

	UPDATE TM
	SET NO_LINE_RATE = TLR.NO_LINE_RATE_READING
		, KY_STATUS = 'NO READING'
	FROM #T_MINUTES TM
		INNER JOIN @T_LINE_RATES TLR
			ON TM.ID_QA27 = TLR.ID_QA27
			AND TM.DT_INITIAL_DATE BETWEEN TLR.DT_QA27_INITIAL_TIME AND TLR.DT_QA27_FINAL_TIME
	WHERE NO_LINE_RATE IS NULL

	UPDATE TM
	SET NO_LINE_RATE = CASE WHEN TI.FG_LINE_DOWN = 1 THEN 0 ELSE TM.NO_LINE_RATE END
		, FG_LINE_DOWN = ISNULL(TI.FG_LINE_DOWN, 0)
		--, ID_PROBLEM_AREA = TI.ID_PROBLEM_AREA
		--, ID_PROBLEM_CODE = TI.ID_PROBLEM_CODE
		, KY_CODE_TYPE = TI.KY_CODE_TYPE
	FROM #T_MINUTES TM
		INNER JOIN @T_ISSUE TI
			ON TM.ID_PRODUCTION_LINE = TI.ID_PRODUCTION_LINE
			AND TM.DT_INITIAL_DATE BETWEEN DATEADD(MINUTE, ISNULL(TI.NO_TIME_BEFORE_HELP, 0) * -1, TI.DT_ISSUE) AND TI.DT_ISSUE_CLOSED

	; WITH T_LINE_RATES AS (
		SELECT TM.ID_PRODUCTION_LINE, TM.ID_QA27, TM.NO_LINE_RATE, COUNT(1) AS NO_SUM_MINUTES
		FROM #T_MINUTES TM 
		GROUP BY TM.ID_PRODUCTION_LINE, TM.ID_QA27, TM.NO_LINE_RATE
	), T_EXTRUDED_LBS AS (
		SELECT ID_PRODUCTION_LINE, ID_QA27, SUM(ISNULL(NO_SUM_MINUTES, 0) * ISNULL(NO_LINE_RATE, 0) / 60.0) AS NO_EXTRUDED_LBS
		FROM T_LINE_RATES
		GROUP BY ID_PRODUCTION_LINE, ID_QA27
	)

	UPDATE TQ
	SET NO_EXTRUDED_LBS = TEL.NO_EXTRUDED_LBS
	FROM @T_QA27 TQ
		INNER JOIN T_EXTRUDED_LBS TEL
			ON TEL.ID_QA27 = TQ.ID_QA27

	; WITH T_ISSUE_TIME AS (
		SELECT ID_QA27
			, COUNT(1) AS NO_TOTAL
			, SUM(CASE WHEN FG_LINE_DOWN = 0 THEN 1 ELSE 0 END) AS NO_LINE_UP
			, SUM(CASE WHEN FG_LINE_DOWN = 1 THEN 1 ELSE 0 END) AS NO_LINE_DOWN
			, SUM(CASE WHEN ISNULL(FG_LINE_DOWN, 0) = 0 THEN 1 ELSE 0 END) AS NO_PROD
			, SUM(CASE WHEN KY_CODE_TYPE = 'DEV' THEN 1 ELSE 0 END) NO_DEV
			, SUM(CASE WHEN KY_CODE_TYPE = 'DCHG' THEN 1 ELSE 0 END) NO_DCHG
			, SUM(CASE WHEN KY_CODE_TYPE = 'OTHER' THEN 1 ELSE 0 END) NO_OTHER
			, SUM(CASE WHEN KY_CODE_TYPE = 'RCHG' THEN 1 ELSE 0 END) NO_RCHG
			, SUM(CASE WHEN KY_CODE_TYPE = 'SMNT' THEN 1 ELSE 0 END) NO_SMNT
			, SUM(CASE WHEN KY_CODE_TYPE = 'UMNT' THEN 1 ELSE 0 END) NO_UMNT
			, SUM(CASE WHEN KY_CODE_TYPE = 'IDLE' THEN 1 ELSE 0 END) NO_IDLE
		FROM #T_MINUTES
		GROUP BY ID_QA27
	)

	UPDATE QA
	SET NO_SUM_MINUTES_LOST_TIME = NO_LINE_UP / 60.0
		, NO_SUM_MINUTES_DOWN_TIME = NO_LINE_DOWN / 60.0
		, NO_SUM_MINUTES_PROD = NO_PROD / 60.0
		, NO_SUM_MINUTES_DCHG = NO_DCHG / 60.0
		, NO_SUM_MINUTES_DEV = NO_DEV / 60.0
		, NO_SUM_MINUTES_IDLE = NO_IDLE / 60.0
		, NO_SUM_MINUTES_OTHER = NO_IDLE / 60.0
		, NO_SUM_MINUTES_RCHG = NO_RCHG / 60.0
		, NO_SUM_MINUTES_SMNT = NO_SMNT / 60.0
		, NO_SUM_MINUTES_UMNT = NO_UMNT / 60.0
	FROM @T_QA27 QA
		INNER JOIN T_ISSUE_TIME TIT
			ON QA.ID_QA27 = TIT.ID_QA27

 	; WITH T_PCS_WEIGHT AS (
		SELECT TS.ID_QA27
			, AVG(XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)')) AS NO_AVG_WEIGHT
		FROM PRD.K_FORM KF
			INNER JOIN @T_SKID TS
				ON KF.ID_PALLET = TS.ID_SKID
				AND KF.KY_STATUS_FORM = 'CAPTURED'
				AND KF.KY_PROCESS_TYPE IN ('MANUFACTURE', 'QUALITY')
			INNER JOIN PRD.K_FORM_METRICS KFM
				ON KF.ID_K_FORM = KFM.ID_K_FORM
				AND KFM.ID_METRICS = @ID_WEIGHT_METRIC
				AND XML_METRICS_VALUE.value('(/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX'
		GROUP BY TS.ID_QA27
	)

	UPDATE TQ
	SET NO_PCS_WEIGHT = TPW.NO_AVG_WEIGHT
	FROM @T_QA27 TQ
		INNER JOIN T_PCS_WEIGHT TPW
			ON TQ.ID_QA27 = TPW.ID_QA27


/******************					CONSULTA PARA OBTENER EL WEB WIDTH				**********************/

 	; WITH T_WEB_WIDTH AS (
		SELECT TS.ID_QA27
			, AVG(XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)')) AS NO_AVG_WEB_WIDTH
		FROM PRD.K_FORM KF
			INNER JOIN @T_SKID TS
				ON KF.ID_PALLET = TS.ID_SKID
				AND KF.KY_STATUS_FORM = 'CAPTURED'
				AND KF.KY_PROCESS_TYPE = 'PROCESS'
			INNER JOIN PRD.K_FORM_METRICS KFM
				ON KF.ID_K_FORM = KFM.ID_K_FORM
				AND KFM.ID_METRICS = @ID_WEB_WIDTH_METRIC
				AND XML_METRICS_VALUE.value('(/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX'
		GROUP BY TS.ID_QA27
	)

	
	UPDATE TQ
	SET NO_WEB_WIDTH = TPW.NO_AVG_WEB_WIDTH
	FROM @T_QA27 TQ
		INNER JOIN T_WEB_WIDTH TPW
			ON TQ.ID_QA27 = TPW.ID_QA27
	

	UPDATE TQ
		SET NO_WEB_WIDTH = (SELECT TOP 1 XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') FROM PRD.K_FORM_METRICS KFM INNER JOIN PRD.K_FORM KF ON KF.ID_K_FORM = KFM.ID_K_FORM AND KFM.ID_METRICS = @ID_WEB_WIDTH_METRIC AND KF.KY_STATUS_FORM = 'CAPTURED' AND KF.KY_PROCESS_TYPE = 'PROCESS' AND KF.ID_PRODUCTION_LINE = TQ.ID_PRODUCTION_LINE ORDER BY KF.DT_FORM DESC)
	FROM @T_QA27 TQ
	WHERE TQ.NO_WEB_WIDTH IS NULL


/******************					TERMINAR CONSULTA PARA OBTENER EL WEB WIDTH      	**********************/



--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
--						
--							CÓDIGO PARA DETERMINAR EL DIE PUMP
--
--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

	DECLARE @T_DIE_PUMPS TABLE (
		  NO_LINE INT
		, ID_PRODUCTION_LINE INT
		, ID_WORK_ORDER INT
		, ID_QA27 INT
		, DT_QA27_INITIAL_TIME DATETIME
		, DT_QA27_FINAL_TIME DATETIME
		, DT_FORM_CREATION DATETIME
		, DT_NEXT_CHANGE DATETIME
		, DT_FINAL_DIE_PUMP_READING DATETIME
		, NO_MINUTES_QA27 INT
		, NO_MINUTES_BETWEEN_QA27_START INT
		, NO_MINUTES_BETWEEN_READINGS INT
		, NO_LAST_VALUE DECIMAL(13,7)
		, NO_DIE_PUMP_READING DECIMAL(13,7)
		, ID_K_FORM INT
	)

	-- OBTIENE LOS VALORES DE LINE RATE CAPTURADO EN LOS FORMULARIOS DE PROCESO, 
	INSERT INTO @T_DIE_PUMPS (
		NO_LINE
		, ID_PRODUCTION_LINE
		, ID_WORK_ORDER
		, ID_QA27
		, DT_QA27_INITIAL_TIME
		, DT_QA27_FINAL_TIME
		, DT_FORM_CREATION
		, DT_NEXT_CHANGE
		, NO_LAST_VALUE
		, NO_DIE_PUMP_READING
		, ID_K_FORM

	)
	SELECT ROW_NUMBER() OVER (PARTITION BY KWO.ID_PRODUCTION_LINE, KQ.ID_QA27 ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION) AS NO_LINE
		, KWO.ID_PRODUCTION_LINE
		, KWO.ID_WORK_ORDER
		, TS.ID_QA27
		, KQ.DT_INITIAL_TIME AS DT_QA27_INITIAL_TIME
		, KQ.DT_FINAL_TIME AS DT_QA27_FINAL_TIME
		, KF.DT_CREATION AS DT_FORM_CREATION
		, LEAD (KF.DT_CREATION) OVER (PARTITION BY KWO.ID_PRODUCTION_LINE ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION) AS DT_NEXT_CHANGE
		, ISNULL(LAG (XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)')) OVER (PARTITION BY KWO.ID_PRODUCTION_LINE ORDER BY KWO.ID_PRODUCTION_LINE, KF.DT_CREATION), (SELECT TOP 1 KFM1.XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') FROM PRD.K_FORM KF1 INNER JOIN PRD.K_FORM_METRICS KFM1 ON KF1.ID_K_FORM = KFM1.ID_K_FORM AND KFM1.ID_METRICS = @ID_LINE_RATE_METRIC AND KF1.KY_PROCESS_TYPE = 'PROCESS' AND KF1.KY_STATUS_FORM = 'CAPTURED' AND KF1.DT_CREATION < KF.DT_CREATION ORDER BY KF1.DT_CREATION DESC)) AS NO_LAST_VALUE
		, XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') AS NO_LINE_RATE_READING
		, KF.ID_K_FORM
	FROM PRD.K_FORM KF
		INNER JOIN @T_SKID TS
			ON KF.ID_PALLET = TS.ID_SKID
			AND KF.KY_STATUS_FORM = 'CAPTURED'
			AND KF.KY_PROCESS_TYPE = 'PROCESS'
		INNER JOIN PRD.K_QA27 KQ
			ON KQ.ID_QA27 = TS.ID_QA27
		INNER JOIN PRD.K_WORK_ORDER KWO
			ON KQ.ID_WORK_ORDER = KWO.ID_WORK_ORDER
		INNER JOIN PRD.K_FORM_METRICS KFM
			ON KF.ID_K_FORM = KFM.ID_K_FORM
			AND KFM.ID_METRICS = @ID_DIE_PUMP_METRIC
			AND XML_METRICS_VALUE.value('(/FIELD_TYPES/@FIELD_TYPE)[1]', 'NVARCHAR(20)') = 'NUMERICBOX'


	UPDATE @T_DIE_PUMPS
	SET NO_MINUTES_QA27 = DATEDIFF(MINUTE, DT_QA27_INITIAL_TIME, DT_QA27_FINAL_TIME)
		, NO_MINUTES_BETWEEN_QA27_START = CASE WHEN NO_LINE = 1 THEN DATEDIFF(MINUTE, DT_QA27_INITIAL_TIME, DT_FORM_CREATION) ELSE 0 END
		, NO_MINUTES_BETWEEN_READINGS = CASE WHEN DT_NEXT_CHANGE > DT_QA27_FINAL_TIME THEN DATEDIFF(MINUTE, DT_FORM_CREATION, DT_QA27_FINAL_TIME) ELSE DATEDIFF(MINUTE, DT_FORM_CREATION, DT_NEXT_CHANGE) END
		, DT_FINAL_DIE_PUMP_READING = CASE WHEN DT_NEXT_CHANGE > DT_QA27_FINAL_TIME THEN DT_QA27_FINAL_TIME ELSE DT_NEXT_CHANGE END


	--INSERTA LOS QA27 QUE NO TIENEN FORMULARIO DE PROCESO
	INSERT INTO @T_DIE_PUMPS (ID_PRODUCTION_LINE, ID_WORK_ORDER, ID_QA27, DT_QA27_INITIAL_TIME, DT_QA27_FINAL_TIME, NO_MINUTES_QA27)
	SELECT TQ.ID_PRODUCTION_LINE, TQ.ID_WORK_ORDER, TQ.ID_QA27, TQ.DT_INITIAL_DATE, TQ.DT_FINAL_DATE, DATEDIFF(MINUTE, TQ.DT_INITIAL_DATE, TQ.DT_FINAL_DATE)
	FROM @T_QA27 TQ
	WHERE NOT EXISTS (SELECT TOP 1 1 FROM @T_DIE_PUMPS TLR WHERE TLR.ID_QA27 = TQ.ID_QA27)

	UPDATE TLR
	SET NO_DIE_PUMP_READING = (CASE WHEN TLR.NO_DIE_PUMP_READING IS NULL THEN (SELECT TOP 1 NO_DIE_PUMP_READING FROM @T_DIE_PUMPS TLR1 WHERE TLR1.NO_DIE_PUMP_READING IS NOT NULL AND TLR1.ID_PRODUCTION_LINE = TLR.ID_PRODUCTION_LINE AND TLR1.DT_QA27_INITIAL_TIME < TLR.DT_QA27_INITIAL_TIME ORDER BY TLR1.DT_QA27_INITIAL_TIME DESC) ELSE NULL END)
	FROM @T_DIE_PUMPS TLR
	WHERE TLR.NO_LINE IS NULL


	UPDATE TLR
	SET NO_DIE_PUMP_READING = (SELECT TOP 1 XML_METRICS_VALUE.value('(/FIELD_TYPES/@FINISHED_VALUE)[1]', 'DECIMAL(13,7)') FROM PRD.K_FORM_METRICS KFM INNER JOIN PRD.K_FORM KF ON KF.ID_K_FORM = KFM.ID_K_FORM AND KFM.ID_METRICS = @ID_DIE_PUMP_METRIC AND KF.KY_STATUS_FORM = 'CAPTURED' AND KF.KY_PROCESS_TYPE = 'PROCESS' AND KF.ID_PRODUCTION_LINE = TLR.ID_PRODUCTION_LINE ORDER BY KF.DT_FORM DESC)
	FROM @T_DIE_PUMPS TLR
	WHERE NO_DIE_PUMP_READING IS NULL

	
	UPDATE T1
	SET NO_DIE_PUMP = T2.NO_DIE_PUMP_READING
	FROM @T_QA27 T1
		INNER JOIN @T_DIE_PUMPS T2 ON T1.ID_PRODUCTION_LINE = T2.ID_PRODUCTION_LINE AND T1.ID_WORK_ORDER = T2.ID_WORK_ORDER AND T1.ID_QA27 = T2.ID_QA27
	WHERE T2.NO_LINE = 1	

	UPDATE T1
	SET NO_DIE_PUMP = T2.NO_DIE_PUMP_READING
	FROM @T_QA27 T1
		INNER JOIN @T_DIE_PUMPS T2 ON T1.ID_PRODUCTION_LINE = T2.ID_PRODUCTION_LINE AND T1.ID_WORK_ORDER = T2.ID_WORK_ORDER AND T1.ID_QA27 = T2.ID_QA27
	WHERE T2.NO_LINE IS NULL

	--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
	--						
	--							TERMINA CÓDIGO PARA DETERMINAR EL DIE PUMP
	--
	--000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000


	UPDATE @T_QA27
		SET
			  NO_REPORT_WIDTH = CASE WHEN NO_WEB_WIDTH IS NOT NULL AND NO_WEB_WIDTH > 0 THEN PRD.GET_WIDTH_REPORT_ALT(NO_WEB_WIDTH, NO_LENGTH, NO_WIDTH) ELSE 0 END --AS NO_REPORT_WIDTH
			, NO_REPORT_PCS = CASE WHEN NO_WEB_WIDTH IS NOT NULL AND NO_WEB_WIDTH > 0  THEN PRD.GET_PCS_REPORT(NO_WEB_WIDTH, NO_LENGTH, NO_WIDTH) ELSE 0 END --AS NO_REPORT_PCS

	UPDATE @T_QA27
		SET
			NO_YIELD = CASE WHEN NO_WEB_WIDTH IS NOT NULL AND NO_WEB_WIDTH > 0 THEN ((NO_REPORT_WIDTH * NO_REPORT_PCS) / NO_WEB_WIDTH) ELSE 0 END

	UPDATE @T_QA27
		SET
			NO_YIELD = 1
	WHERE NO_YIELD > 1
	
	UPDATE @T_QA27
		SET
			NO_LOST_LBS = CASE WHEN NO_YIELD > 0 THEN ((NO_YIELD / NO_YIELD) + (NO_EXTRUDED_LBS / NO_YIELD)) - NO_EXTRUDED_LBS ELSE 0 END

	SELECT ID_QA27
		, ID_WORK_ORDER
		, ID_ITEM
		, NM_ITEM
		, ID_PRODUCTION_LINE
		, DT_INITIAL_DATE
		, DT_FINAL_DATE
		, KY_QA27_STATUS
		, KY_SHIFT
		, KY_SHIFT_TIME
		, NO_COMPLETED_QTY
		, NO_PCS_WEIGHT
		, KY_WORK_ORDER_STATUS
		, NO_SUM_MINUTES_PROD
		, NO_SUM_MINUTES_DEV
		, NO_SUM_MINUTES_DCHG
		, NO_SUM_MINUTES_OTHER
		, NO_SUM_MINUTES_RCHG
		, NO_SUM_MINUTES_SMNT
		, NO_SUM_MINUTES_UMNT
		, NO_SUM_MINUTES_IDLE
		, NO_SUM_MINUTES_LOST_TIME
		, NO_SUM_MINUTES_DOWN_TIME
		, NO_SUM_TOTAL
		, NO_EXTRUDED_LBS
		, NO_RATE_LINE
		, NO_WEB_WIDTH
		, NO_DIE_PUMP
		, NO_LENGTH
		, NO_WIDTH
		, NO_REPORT_WIDTH
		, NO_REPORT_PCS
		, NO_YIELD
		, NO_LOST_LBS
	FROM @T_QA27
	ORDER BY ISNULL(DT_FINAL_DATE, DT_INITIAL_DATE) DESC, ID_WORK_ORDER

END

