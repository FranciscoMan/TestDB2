-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CREATE date: 15/03/2017
-- Description: get all issues
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_GET_ISSUES] 
	    @PIN_ID_ISSUE AS int = NULL,
	    @PIN_ID_QA27 AS int = NULL,
	    @PIN_ID_WORK_ORDER AS int = NULL,
	    @PIN_ID_PROBLEM_AREA AS int = NULL,
	    @PIN_ID_PROBLEM_CODE AS int = NULL,
		@PIN_ID_POSITION_INVOLVED AS INT = NULL

AS   
	
	SET @PIN_ID_QA27 = NULL

	SELECT KI.ID_ISSUE
		, KI.KY_ISSUE
		, KI.ID_QA27
		, QA.KY_SHIFT
		, CS.NM_SHIFT
		, KI.ID_WORK_ORDER
		, WO.NO_WORK_ORDER
		, WO.ID_PRODUCTION_LINE
		, PL.NM_PRODUCTION_LINE
		, KI.ID_PROBLEM_AREA
		, PA.KY_PROBLEM_AREA
		, PA.NM_PROBLEM_AREA
		, KI.ID_PROBLEM_CODE
		, PC.KY_PROBLEM_CODE
		, PC.NM_PROBLEM_CODE
		, PC.KY_CODE_TYPE
		, KI.DS_SYMPTOM
		, KI.XML_POSITIONS_INVOLVED
		, KI.DS_ISSUE_EXPLANATION_OPEN
		, KI.DT_ISSUE
		, KI.FG_CONFIRMED
		, KI.DT_CONFIRMED
		, KI.ID_DEFECT_CATEGORY
		, KI.DS_EXPLANATION_EVENT_CLOSED
		, KI.DT_ISSUE_CLOSED
		, KI.KY_STATUS
		, KI.KY_USER_INVOLVED
		, CU.NM_USER
		, CIS.NM_ISSUE_STATUS
		, CAST(KI.DT_ISSUE AS TIME) AS INITIAL_TIME
		, CAST(KI.DT_CONFIRMED AS TIME) CONFIRMED_TIME 
		, CASE WHEN KI.DT_CONFIRMED IS NOT NULL THEN DATEDIFF(HOUR, KI.DT_CONFIRMED, KI.DT_ISSUE_CLOSED) ELSE NULL END LOST_TIME_HRS
		, CAST(KI.DT_ISSUE_CLOSED AS TIME) CLOSE_TIME
		, KI.FG_LINE_DOWN
		, CASE WHEN KI.FG_LINE_DOWN = 1 THEN 'Down time' ELSE 'Lost time' END AS NM_TYPE_LOST_TIME_EVENT
	FROM PRD.K_ISSUE KI
		LEFT JOIN PRD.K_WORK_ORDER WO 
			ON WO.ID_WORK_ORDER = KI.ID_WORK_ORDER
		LEFT JOIN PRD.C_PROBLEM_AREA PA 
			ON KI.ID_PROBLEM_AREA = PA.ID_PROBLEM_AREA
		LEFT JOIN PRD.C_PROBLEM_CODE PC 
			ON KI.ID_PROBLEM_CODE = PC.ID_PROBLEM_CODE
		LEFT JOIN ADM.VW_C_ISSUE_STATUS CIS 
			ON CIS.KY_ISSUE_STATUS = KI.KY_STATUS
		LEFT JOIN ADM.C_USER CU 
			ON CU.KY_USER = KI.KY_USER_INVOLVED
		LEFT JOIN PRD.C_PRODUCTION_LINE PL 
			ON PL.ID_PRODUCTION_LINE = WO.ID_PRODUCTION_LINE
		LEFT JOIN PRD.K_QA27 QA 
			ON QA.ID_QA27 = KI.ID_QA27
		LEFT JOIN ADM.VW_C_SHIFT CS 
			ON CS.KY_SHIFT = QA.KY_SHIFT
		WHERE (@PIN_ID_ISSUE IS NULL OR (@PIN_ID_ISSUE IS NOT NULL AND KI.ID_ISSUE = @PIN_ID_ISSUE)) AND 
			(@PIN_ID_QA27 IS NULL OR (@PIN_ID_QA27 IS NOT NULL AND KI.ID_QA27 = @PIN_ID_QA27)) AND 
			(@PIN_ID_WORK_ORDER IS NULL OR (@PIN_ID_WORK_ORDER IS NOT NULL AND KI.ID_WORK_ORDER = @PIN_ID_WORK_ORDER)) AND 
    		(@PIN_ID_PROBLEM_AREA IS NULL OR (@PIN_ID_PROBLEM_AREA IS NOT NULL AND KI.ID_PROBLEM_AREA = @PIN_ID_PROBLEM_AREA)) AND 
			(@PIN_ID_PROBLEM_CODE IS NULL OR (@PIN_ID_PROBLEM_CODE IS NOT NULL AND KI.ID_PROBLEM_CODE = @PIN_ID_PROBLEM_CODE))
			ORDER BY ID_ISSUE DESC

