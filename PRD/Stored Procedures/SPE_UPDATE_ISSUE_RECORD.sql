-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2018
-- Author: Ivan Guerrero
-- CREATE date: 15/01/2018
-- Description: Updates time values from issue records from Lost time events window. 
-- =============================================

CREATE PROCEDURE    [PRD].[SPE_UPDATE_ISSUE_RECORD] 
    	  @XML_RESULT XML = '' OUT     -- --0 TO ERROR AND 1 TO CORRECT
		  , @PIN_NO_TIME_BEFORE_HELP AS INT = NULL
		  , @PIN_ID_ISSUE AS INT = NULL
		  , @PIN_DT_ISSUE AS DATETIME = NULL
		  , @PIN_DT_ISSUE_CLOSED AS DATETIME = NULL
		  , @PIN_FG_LINE_DOWN AS BIT = NULL
		  , @PIN_KY_USER_APP AS NVARCHAR(50)
		  , @PIN_NM_PROGRAM AS NVARCHAR(50)
AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
	, @DT_SYSTEM DATETIME = GETDATE()
		
   	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		
		UPDATE PRD.K_ISSUE
				SET   NO_TIME_BEFORE_HELP = @PIN_NO_TIME_BEFORE_HELP
					, DT_ISSUE = @PIN_DT_ISSUE
					, DT_ISSUE_CLOSED = @PIN_DT_ISSUE_CLOSED					
					, FG_LINE_DOWN =  @PIN_FG_LINE_DOWN
					, DT_UPDATE = @DT_SYSTEM
					, KY_USER_APP_UPDATE = @PIN_KY_USER_APP
					, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM
				WHERE PRD.K_ISSUE.ID_ISSUE = @PIN_ID_ISSUE;

		-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED				
		
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
		SELECT @ERROR_MESSAGE 
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register' + ' ' + @ERROR_MESSAGE)	    
			
	END CATCH
END

