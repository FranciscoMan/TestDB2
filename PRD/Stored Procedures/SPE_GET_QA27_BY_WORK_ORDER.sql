-- =============================================
-- Proyect: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio Díaz
-- CREATE date: 31/05/2018
-- Description: get WORKS ORDERS
-- =============================================
-- 01/30/2020 - Vitek 2020: We added pallets by work order. by AA. 
-- =============================================

CREATE PROCEDURE   [PRD].[SPE_GET_QA27_BY_WORK_ORDER] 
		@PIN_ID_WORK_ORDER AS int
AS  
		--NEW!! 
            -- DECLARE @COUNT_PALLETS INT
	-- SELECT @COUNT_PALLETS -- SELECT DE PRUEBA
	;WITH T_QUANTITY AS (
		  SELECT KQ.ID_QA27
			, KQ.ID_WORK_ORDER
			, KP.NO_QUANTITY AS NO_EXTR_QTY
			, CASE WHEN VCPS.FG_FOR_SAVE = 1 THEN KP.NO_QUANTITY ELSE 0 END AS NO_SAVED_QTY
		FROM PRD.K_QA27 KQ
			LEFT JOIN PRD.K_PALLET KP
				ON KQ.ID_QA27 = KP.ID_QA27
			LEFT JOIN ADM.VW_C_PALLET_STATUS VCPS
				ON KP.KY_STATUS = VCPS.KY_PALLET_STATUS
		 WHERE KQ.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
		GROUP BY KQ.ID_QA27 , KQ.ID_WORK_ORDER, KP.NO_QUANTITY, VCPS.FG_FOR_SAVE
	), T_GROUPED_QA_WO AS (
		SELECT ID_QA27
			, ID_WORK_ORDER
			, SUM(ISNULL(NO_EXTR_QTY, 0)) AS NO_SUM_EXTR_QTY
			, SUM(ISNULL(NO_SAVED_QTY, 0)) AS NO_SUM_SAVED_QTY
		FROM T_QUANTITY
		GROUP BY ID_QA27, ID_WORK_ORDER
	), T_LOST_TIME_EVENT AS (
		SELECT KI.ID_QA27, SUM(DATEDIFF(SECOND, KI.DT_ISSUE, ISNULL(KI.DT_ISSUE_CLOSED, GETDATE()))) NO_LOST_TIME_SECONDS
		FROM PRD.K_ISSUE KI
			INNER JOIN T_GROUPED_QA_WO TGQW
				ON KI.ID_QA27 = TGQW.ID_QA27
		GROUP BY KI.ID_QA27
	)

	SELECT REPLACE(KS.KY_SHIFT_TIME, 'SF-', '') AS KY_SHIFT_TIME
		, KWO.ID_WORK_ORDER
		, KWO.NM_CUSTOMER
		, CI.KY_ITEM
		, KWO.NM_ITEM
		, CPL.ID_PRODUCTION_LINE
		, CPL.NM_PRODUCTION_LINE
		, KWO.DT_WORK_ORDER AS DT_WO_INITIAL
		, KWO.DT_CLOSE_WORK_ORDER AS DT_WO_CLOSED
		, KQ.DT_INITIAL_TIME AS DT_QA27_INITIAL
		, KQ.DT_FINAL_TIME AS DT_QA27_FINAL 
		, KQ.DT_QA27 AS DT_QA27_OPERATOR_LOGGED 
		, CPL.NO_POUNDS_PER_HOUR
		, (DATEDIFF(SECOND, KQ.DT_INITIAL_TIME, ISNULL(KQ.DT_FINAL_TIME, GETDATE())) / 3600.0) * CPL.NO_POUNDS_PER_HOUR AS NO_TOTAL_LBS
		, TGQW.NO_SUM_EXTR_QTY
		, TGQW.NO_SUM_EXTR_QTY * CI.NO_POUNDS_PER_ITEM AS NO_EXTR_PER_ITEM
		, TGQW.NO_SUM_SAVED_QTY
		, TGQW.NO_SUM_SAVED_QTY * CI.NO_POUNDS_PER_ITEM AS NO_SAVED_LBS
		, TLTE.NO_LOST_TIME_SECONDS / 3600.0 AS NO_TOTAL_LOST_TIME_HRS
		, KS.ID_SHIFT
		, KQ.KY_STATUS
		, KQ.ID_QA27
		, KQ.NM_LEADMAN
	    , CASE WHEN KS.KY_AUTHORIZER_USER = 'self authorized' THEN '' ELSE KS.KY_AUTHORIZER_USER END AS NM_AUTHORIZER
		, STUFF ( (
	 SELECT  ', ' +  CONVERT(VARCHAR, KP.NO_PALLET) AS 'data()'
		 FROM PRD.K_QA27 QA
		   INNER JOIN  PRD.K_PALLET KP ON KP.ID_QA27 = KQ.ID_QA27
			WHERE KP.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
		GROUP BY KP.ID_QA27, KP.NO_PALLET
		FOR XML PATH('')
		),1,2,'') AS SKIDS 
	FROM T_GROUPED_QA_WO TGQW
		INNER JOIN PRD.K_WORK_ORDER KWO
			ON TGQW.ID_WORK_ORDER = KWO.ID_WORK_ORDER
		INNER JOIN PRD.C_PRODUCTION_LINE CPL
			ON CPL.ID_PRODUCTION_LINE = KWO.ID_PRODUCTION_LINE
		INNER JOIN PRD.C_ITEM CI
			ON KWO.ID_ITEM = CI.ID_ITEM
		INNER JOIN PRD.K_QA27 KQ
			ON TGQW.ID_QA27 = KQ.ID_QA27
		INNER JOIN PRD.K_SHIFT KS
			ON KS.ID_SHIFT = KQ.ID_SHIFT
		LEFT JOIN T_LOST_TIME_EVENT TLTE
			ON TLTE.ID_QA27 = KQ.ID_QA27
	ORDER BY KQ.DT_INITIAL_TIME
