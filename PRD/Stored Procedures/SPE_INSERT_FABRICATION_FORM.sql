-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio Diaz
-- CRETAE date: 3/3/2018
-- Description: Gets or creates a new form
-- =============================================


CREATE PROCEDURE    [PRD].[SPE_INSERT_FABRICATION_FORM] 
	@XML_RESULT XML = '' OUT
	, @PIN_ID_WORK_ORDER AS INT
	, @PIN_ID_PRODUCTION_LINE AS INT
	, @PIN_KY_USER NVARCHAR(50)
	, @PIN_NM_PROGRAM NVARCHAR(50)
AS 
BEGIN  

	BEGIN TRY
		DECLARE @V_EXIST_TRAN BIT = 0
			, @DT_SYSTEM DATETIME = GETDATE()
			, @KY_PROCESS_MANUFACTURE NVARCHAR(20) = 'MANUFACTURE'
			, @ID_BRANCH_PLANT INT
			, @ID_PRODUCTION_LINE_TYPE INT = (SELECT TOP 1 ID_PRODUCTION_LINE_TYPE FROM ADM.VW_S_PRODUCTION_LINE_TYPE WHERE KY_PRODUCTION_LINE_TYPE = 'LF')
			, @ID_K_FORM INT = NULL
			, @ID_C_FORM INT = NULL
			, @XML_DATA XML
		
		SELECT TOP 1 @ID_BRANCH_PLANT = ID_BRANCH_PLANT 
		FROM PRD.K_WORK_ORDER
		WHERE ID_WORK_ORDER = @PIN_ID_WORK_ORDER

		IF (@@TRANCOUNT = 0) BEGIN
			BEGIN TRANSACTION
			SET @V_EXIST_TRAN = 1
		END	

		SELECT @ID_K_FORM = KF.ID_K_FORM
			, @ID_C_FORM = CF.ID_FORM
		FROM PRD.K_FORM KF
			INNER JOIN PRD.C_FORM CF
				ON KF.ID_FORM = CF.ID_FORM
				AND CF.ID_PRODUCTION_LINE_TYPE = @ID_PRODUCTION_LINE_TYPE
				AND CF.FG_GET_PERIODICALLY = 0
				AND KF.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
				AND KF.ID_PRODUCTION_LINE = @PIN_ID_PRODUCTION_LINE
				AND KF.ID_BRANCH_PLANT = @ID_BRANCH_PLANT
				AND KF.KY_PROCESS_TYPE = @KY_PROCESS_MANUFACTURE
				AND KF.KY_STATUS_FORM IN ('CREATED', 'SAVED')
		

		IF @ID_K_FORM IS NULL BEGIN
			CREATE TABLE #T_INSERTED_FORM  (
				ID_K_FORM INT
				, ID_C_FORM INT
			)

			INSERT INTO PRD.K_FORM (
				ID_BRANCH_PLANT
				, ID_FORM
				, ID_WORK_ORDER
				, ID_QA27
				, ID_PRODUCTION_LINE
				, DT_FORM
				, KY_STATUS_FORM
				, KY_PROCESS_TYPE
				, DT_CREATION
				, KY_USER_APP_CREATION
				, NM_PROGAM_CREATE
			)
			OUTPUT INSERTED.ID_K_FORM, INSERTED.ID_FORM INTO #T_INSERTED_FORM (ID_K_FORM, ID_C_FORM)
			SELECT TOP 1 CF.ID_BRANCH_PLANT
				, CF.ID_FORM
				, KWO.ID_WORK_ORDER
				, KQA.ID_QA27
				, KWO.ID_PRODUCTION_LINE
				, @DT_SYSTEM
				, 'CREATED'
				, @KY_PROCESS_MANUFACTURE
				, @DT_SYSTEM
				, @PIN_KY_USER
				, @PIN_NM_PROGRAM
			FROM PRD.C_FORM CF
				CROSS JOIN PRD.K_WORK_ORDER KWO
				INNER JOIN PRD.K_QA27 KQA
					ON KWO.ID_WORK_ORDER = KQA.ID_WORK_ORDER
			WHERE CF.FG_GET_PERIODICALLY = 0
				AND CF.KY_PROCESS = @KY_PROCESS_MANUFACTURE
				AND CF.ID_BRANCH_PLANT = @ID_BRANCH_PLANT
				AND CF.ID_PRODUCTION_LINE_TYPE = @ID_PRODUCTION_LINE_TYPE
				AND KWO.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
				AND KWO.ID_PRODUCTION_LINE = @PIN_ID_PRODUCTION_LINE

			SELECT @ID_K_FORM = ID_K_FORM
				, @ID_C_FORM = ID_C_FORM
			FROM #T_INSERTED_FORM
		END

		SET @XML_DATA = (
			SELECT @ID_K_FORM AS '@ID_K_FORM'
				, @KY_PROCESS_MANUFACTURE AS '@KY_PROCESS_MANUFACTURE' 
				, @ID_C_FORM AS '@ID_C_FORM'
			FOR XML PATH('FORM')
		)

		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_DATA(@XML_RESULT, @XML_DATA)		

		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES(ERROR_NUMBER(), ERROR_MESSAGE())			
	END CATCH
END

