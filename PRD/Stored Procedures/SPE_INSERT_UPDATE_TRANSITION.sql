-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio Díaz
-- CRETAE date: 26/05/2017
-- Description: Execute the insert or update process to transition
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_INSERT_UPDATE_TRANSITION] 
		  @XML_RESULT XML OUT
    	, @PIN_ID_TRANSITION AS INT
		, @PIN_KY_TRANSITION AS NVARCHAR(50)
		, @PIN_NM_TRANSITION AS NVARCHAR(100)
		, @PIN_DS_TRANSITION AS NVARCHAR(1000)
		, @PIN_NO_STANDARD_TIME AS INT
		, @PIN_FG_ACTIVE AS BIT
		, @PIN_FG_IS_TOOL_CHANGE AS BIT
		, @PIN_KY_USER AS NVARCHAR(50)
		, @PIN_NM_PROGRAM AS NVARCHAR(50)
		, @PIN_TRANSACTION_TYPE CHAR(1)             --I=INSERT   U=UPDATE
AS 
BEGIN  

	DECLARE @V_EXIST_TRAN BIT = 0
		,@DT_SYSTEM DATETIME = GETDATE()


    BEGIN TRY

		IF (@@TRANCOUNT = 0) BEGIN

			BEGIN TRANSACTION

			SET @V_EXIST_TRAN = 1
		END

		IF @PIN_TRANSACTION_TYPE = 'I' BEGIN
			
			INSERT INTO PRD.C_TRANSITION (
				KY_TRANSITION
				, NM_TRANSITION
				, DS_TRANSITION
				, NO_STANDARD_TIME
				, FG_ACTIVE
				, FG_IS_TOOL_CHANGE
				, DT_INACTIVE
				, DT_CREATION
				, KY_USER_APP_CREATION
				, NM_PROGAM_CREATE
			) VALUES (
				@PIN_KY_TRANSITION
				, @PIN_NM_TRANSITION
				, @PIN_DS_TRANSITION
				, @PIN_NO_STANDARD_TIME
				, @PIN_FG_ACTIVE
				, @PIN_FG_IS_TOOL_CHANGE
				, CASE WHEN @PIN_FG_ACTIVE = 0 THEN @DT_SYSTEM ELSE NULL END
				, @DT_SYSTEM
				, @PIN_KY_USER
				, @PIN_NM_PROGRAM
			)

		END

		IF @PIN_TRANSACTION_TYPE = 'U' AND @PIN_ID_TRANSITION IS NOT NULL BEGIN

			UPDATE PRD.C_TRANSITION
			SET KY_TRANSITION = @PIN_KY_TRANSITION
				, NM_TRANSITION = @PIN_NM_TRANSITION
				, DS_TRANSITION = @PIN_DS_TRANSITION
				, NO_STANDARD_TIME = @PIN_NO_STANDARD_TIME
				, FG_ACTIVE = @PIN_FG_ACTIVE
				, FG_IS_TOOL_CHANGE = @PIN_FG_IS_TOOL_CHANGE
				, DT_INACTIVE = CASE WHEN FG_ACTIVE = 1 AND @PIN_FG_ACTIVE = 0 THEN @DT_SYSTEM ELSE DT_INACTIVE END
				, DT_UPDATE = @DT_SYSTEM
				, KY_USER_APP_UPDATE = @PIN_KY_USER
				, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM
			WHERE ID_TRANSITION = @PIN_ID_TRANSITION

		END

		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')

		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT = ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250) = ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the role')
		
			
	END CATCH
END

