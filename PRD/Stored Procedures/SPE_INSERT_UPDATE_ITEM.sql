-- =============================================
-- Proyecto: Plaskolite
-- Author: Julio César Tavares
-- CRETAE date: 14/03/2017
-- Description: Insert or update a new C_LIST_CATALOG
-- =============================================


CREATE PROCEDURE    [PRD].[SPE_INSERT_UPDATE_ITEM] 
    	  @XML_RESULT XML = '' OUT ,    -- --0 TO ERROR AND 1 TO CORRECT
			@PIN_ID_ITEM AS int = NULL,
			@PIN_KY_ITEM AS nvarchar(50) = NULL,
			@PIN_NM_ITEM AS nvarchar(300) = NULL,
			@PIN_DS_ITEM AS nvarchar(500) = NULL,
			@PIN_NO_POUNDS_PER_ITEM AS DECIMAL(10,2) = NULL,
			@PIN_KY_UPC AS NVARCHAR(50) = NULL,
			@PIN_DS_NOTES_JEDWARDS AS NVARCHAR(1000) = NULL,
			@PIN_FG_FILM AS bit = null
		  , @PIN_NO_PIECES_PER_SKID as int = null
		  , @PIN_XML_CARTONS AS XML
		  , @PIN_KY_USER_APP AS nvarchar(50)
		  , @PIN_NM_PROGRAM AS nvarchar(50)
		  , @PIN_TYPE_TRANSACTION CHAR(1)             --I=INSERT   U=UPDATE

AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
		,@DT_SYSTEM DATETIME = GETDATE()
		,@V_KY_ITEM INT
   	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF THE SPE IS GOING TO EXECUTE A UPDATE OR INSERT
		IF @PIN_TYPE_TRANSACTION = 'I' BEGIN
		print('insert');
			SET @V_KY_ITEM = (SELECT COUNT(KY_ITEM) FROM PRD.C_ITEM CI WHERE LTRIM(RTRIM(CI.KY_ITEM)) = LTRIM(RTRIM(@PIN_KY_ITEM)) )

			IF @V_KY_ITEM = 0 BEGIN

					--WE INSERT THE REGISTER ON THE TABLE  PRD.C_ITEM
					INSERT INTO PRD.C_ITEM ( KY_ITEM
						, NM_ITEM
						, DS_ITEM
						, NO_POUNDS_PER_ITEM
						, FG_FILM_TRACK
						, KY_UPC
						, DS_NOTES_JDEDWARDS
						, NO_PIECES_PER_SKID
						, DT_CREATION
						, KY_USER_APP_CREATION
						, NM_PROGAM_CREATE
					)
					VALUES (@PIN_KY_ITEM 
						, @PIN_NM_ITEM 
						, @PIN_DS_ITEM 
						, @PIN_NO_POUNDS_PER_ITEM 
						, @PIN_FG_FILM
						, @PIN_KY_UPC
						, @PIN_DS_NOTES_JEDWARDS 
						, @PIN_NO_PIECES_PER_SKID
						, @DT_SYSTEM 
						, @PIN_KY_USER_APP 
						, @PIN_NM_PROGRAM
					)

					-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
					SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
					SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
					SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
					-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
				END
			ELSE
				BEGIN
					-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
					SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'ERROR')
					SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'El item ya existe', 'ES')
					SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'The items already exist', 'EN')
					-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
				END
				
		END ELSE BEGIN
			-- WE UPDATE THE REGISTER ON THE TABLE PRD.C_ITEM
			UPDATE PRD.C_ITEM
			SET
   				  KY_ITEM = @PIN_KY_ITEM
				, NM_ITEM = @PIN_NM_ITEM
				, DS_ITEM = @PIN_DS_ITEM
				, NO_POUNDS_PER_ITEM = @PIN_NO_POUNDS_PER_ITEM
				, KY_UPC = @PIN_KY_UPC
				, DS_NOTES_JDEDWARDS = @PIN_DS_NOTES_JEDWARDS
				, FG_FILM_TRACK = convert(bit,@PIN_FG_FILM)
				, NO_PIECES_PER_SKID = @PIN_NO_PIECES_PER_SKID
				, DT_UPDATE =@DT_SYSTEM
				, KY_USER_APP_UPDATE = @PIN_KY_USER_APP
				, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM			       
			WHERE ID_ITEM = @PIN_ID_ITEM


		-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED				
		END

		DELETE FROM PRD.C_CARTON_ITEM WHERE ID_ITEM = @PIN_ID_ITEM

		INSERT INTO PRD.C_CARTON_ITEM (
			ID_ITEM
			, ID_CARTON
			, DT_CREATION
			, KY_USER_APP_CREATION
			, NM_PROGRAM_CREATE
		)
		SELECT @PIN_ID_ITEM	
			, c.value('@ID_CARTON', 'INT')
			, @DT_SYSTEM
			, @PIN_KY_USER_APP
			, @PIN_NM_PROGRAM
		FROM @PIN_XML_CARTONS.nodes('/CARTONS/CARTON') X(c)


		
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
	    SET @XML_RESULT = DBO.F_ERROR_MESSAGES(ERROR_NUMBER(), ERROR_MESSAGE())
			
	END CATCH
END

