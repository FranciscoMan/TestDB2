-- =============================================
-- Proyect: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio César Tavares
-- CREATE date: 07/04/2017
-- Description: get shift on course
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_GET_SHIFT_LEADMAN] 
	@PIN_ID_SHIFT INT
	, @PIN_ID_PRODUCTION_LINE INT
	, @PIN_ID_BRANCH_PLANT INT
	, @PIN_KY_USER NVARCHAR(50)
	, @PIN_KY_SHIFT NVARCHAR(50)
	, @PIN_FG_STATUS BIT
	, @PIN_DT_TURN_HISTORY DATETIME

AS  
	DECLARE @V_DATE DATETIME = GETDATE()
	
	SELECT KS.ID_SHIFT
		, KS.ID_PRODUCTION_LINE
		, KS.ID_BRANCH_PLANT
		, KS.KY_USER
		, KS.FG_STATUS
		, KS.DT_START_SHIFT
		, KS.DT_END_SHIFT
		, KS.KY_SHIFT
		, CASE WHEN GETDATE() BETWEEN KS.DT_START_SHIFT AND KS.DT_END_SHIFT THEN CONVERT(BIT,0) ELSE CONVERT(BIT,1) END AS FINISH_SHIFT
		, IP_PL.NO_IP AS NO_IP_CONFIGURED
	FROM PRD.K_SHIFT KS
		INNER JOIN ADM.VW_C_SHIFT VS 
			ON KS.KY_SHIFT = VS.KY_SHIFT
		LEFT JOIN (
			SELECT ID_PRODUCTION_LINE
				, NO_IP
				, ROW_NUMBER() OVER (PARTITION BY PIP.ID_PRODUCTION_LINE ORDER BY PIP.ID_PRODUCTION_LINE DESC) AS  ROW_WO
			FROM PRD.C_PRODUCTION_LINE_IP PIP
		) AS IP_PL 
			ON KS.ID_PRODUCTION_LINE = IP_PL.ID_PRODUCTION_LINE 
			AND IP_PL.ROW_WO = 1
	WHERE KS.KY_USER = @PIN_KY_USER 
		AND KS.FG_STATUS = @PIN_FG_STATUS

