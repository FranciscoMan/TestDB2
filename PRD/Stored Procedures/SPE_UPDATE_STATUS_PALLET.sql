-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2018
-- Author: Julio Tavares
-- CRETAE date: 04/06/2018
-- Description: Change multi status pallet
-- =============================================

CREATE PROCEDURE    [PRD].[SPE_UPDATE_STATUS_PALLET] 
	@XML_RESULT XML = '' OUT ,    -- --0 TO ERROR AND 1 TO CORRECT
	@PIN_XML_PALLETS AS XML = NULL,
	@PIN_KY_STATUS AS nvarchar(50) = NULL,
	@PIN_KY_USER_APP AS nvarchar(50)= NULL,
	@PIN_NM_PROGRAM AS nvarchar(50) = NULL,
	@PIN_TYPE_TRANSACTION CHAR(1)             --I=INSERT   U=UPDATE

AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
   	BEGIN TRY
		DECLARE @V_EXIST_TRAN BIT = 0
		, @DT_SYSTEM DATETIME = GETDATE()
		
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF THE SPE IS GOING TO EXECUTE A UPDATE OR INSERT

		IF @PIN_TYPE_TRANSACTION = 'U' BEGIN
			-- WE UPDATE THE REGISTER ON THE TABLE

			UPDATE KP
			SET
				  KY_STATUS = @PIN_KY_STATUS
				, DT_UPDATE =@DT_SYSTEM
				, KY_USER_APP_UPDATE = @PIN_KY_USER_APP
				, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM
			--WHERE ID_PALLET = @PIN_ID_PALLET
			FROM PRD.K_PALLET KP
			JOIN(
				SELECT 
					d.value('@ID_PALLET', 'INT') AS ID_PALLET
				FROM @PIN_XML_PALLETS.nodes('PALLETS/PALLET') AS T(d)
				)PALLET ON KP.ID_PALLET = PALLET.ID_PALLET


			-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
			SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')

------------------------------------------------------------------------------------------------------------
		END

		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1) BEGIN
			COMMIT	
		END
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1) BEGIN
			ROLLBACK
		END
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,@ERROR_MESSAGE)--'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register')
		
			
	END CATCH
END

