-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CREATE date: 15/03/2017
-- Description: get all issues
-- =============================================
-- 02/27/2019 JDR The query is restructured to avoid the subquery in the projection of the query
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_GET_ISSUES_BY_DATES] 
	@PIN_ID_BRANCH_PLANT INT
	, @PIN_DT_INITIAL DATETIME
	, @PIN_DT_FINAL DATETIME 
	, @PIN_ID_PRODUCTION_LINE INT = NULL
	, @PIN_ID_WORK_ORDER INT = NULL
	
AS   
BEGIN
	DECLARE @DT_SYSTEM DATETIME = GETDATE()
	IF @PIN_ID_PRODUCTION_LINE = 0 BEGIN
		SET @PIN_ID_PRODUCTION_LINE = NULL
	END

	;WITH T_ISSUE_PALLET AS (
		SELECT ROW_NUMBER() OVER(PARTITION BY KI.ID_ISSUE ORDER BY KI.ID_ISSUE, KP.DT_INITIAL_TIME DESC) AS NO_ROW
			  ,KI.ID_ISSUE
			  ,KI.DT_ISSUE
			  ,KI.ID_QA27
			  ,KP.ID_PALLET
			  ,KP.NO_PALLET
			  ,KP.DT_INITIAL_TIME
			  ,DATEDIFF(MINUTE, KP.DT_INITIAL_TIME, KI.DT_ISSUE) AS MIN_DIF
			  ,KP.NO_PALLETS_OPENED
			  ,KP.ID_WORK_ORDER
		FROM PRD.K_ISSUE KI
			INNER JOIN PRD.K_PALLET KP 
				ON KI.ID_WORK_ORDER = KP.ID_WORK_ORDER
				AND (CAST(KI.DT_ISSUE AS DATE) BETWEEN @PIN_DT_INITIAL AND KI.DT_ISSUE_CLOSED
					OR @PIN_DT_INITIAL BETWEEN CAST(KI.DT_ISSUE AS DATE) AND CAST(ISNULL(KI.DT_ISSUE_CLOSED, @DT_SYSTEM) AS DATE)
				)
		WHERE KP.DT_INITIAL_TIME < KI.DT_ISSUE
	)
	, T_ISSUE_PALLET_NEARBY AS (
		SELECT ID_ISSUE, NO_PALLET
		FROM T_ISSUE_PALLET
		WHERE NO_ROW = 1
	)


	SELECT KI.ID_ISSUE
		, KI.KY_ISSUE
		, KI.ID_QA27
		, REPLACE(KS.KY_SHIFT_TIME, 'SF-', '') AS KY_SHIFT
		, KI.ID_WORK_ORDER
		, WO.NO_WORK_ORDER
		, WO.ID_PRODUCTION_LINE
		, PL.NM_PRODUCTION_LINE
		, KI.ID_PROBLEM_AREA
		, PA.KY_PROBLEM_AREA
		, PA.NM_PROBLEM_AREA
		, KI.ID_PROBLEM_CODE
		, PC.KY_PROBLEM_CODE
		, PC.NM_PROBLEM_CODE
		, PC.KY_CODE_TYPE
		, KI.DS_SYMPTOM
		, KI.XML_POSITIONS_INVOLVED
		, KI.DS_ISSUE_EXPLANATION_OPEN
		, KI.DT_ISSUE
		, KI.FG_CONFIRMED
		, KI.DT_CONFIRMED
		, KI.ID_DEFECT_CATEGORY
		, KI.DS_EXPLANATION_EVENT_CLOSED
		, KI.DT_ISSUE_CLOSED
		, KI.KY_STATUS
		, KI.KY_USER_INVOLVED
		, CU.NM_USER
		, CIS.NM_ISSUE_STATUS
		, CAST(KI.DT_ISSUE AS TIME) AS INITIAL_TIME
		, CAST(KI.DT_CONFIRMED AS TIME) CONFIRMED_TIME 
		, CASE WHEN KI.DT_ISSUE IS NOT NULL THEN CAST(     CONVERT(DECIMAL(5,2),CONVERT(DECIMAL(10,4),DATEDIFF(MINUTE, KI.DT_ISSUE, KI.DT_ISSUE_CLOSED)) / CONVERT(DECIMAL(10,4),60)) AS varchar) ELSE NULL END LOST_TIME_HRS
		, CAST(KI.DT_ISSUE_CLOSED AS TIME) CLOSE_TIME
		, KI.FG_LINE_DOWN
		, KI.DS_ISSUE_EXPLANATION_OPEN AS NM_TYPE_LOST_TIME_EVENT
		--, (SELECT Substring((SELECT ((', ' + RTRIM(LTRIM(KP.NO_PALLET)))) FROM T_ISSUE_PALLET_NEARBY KP WHERE KP.ID_ISSUE = KI.ID_ISSUE FOR XML PATH ( '' )), 3, 1000 )) AS NO_PALLETS_ISSUE
		, CAST(TIPN.NO_PALLET AS NVARCHAR(20)) NO_PALLETS_ISSUE
	FROM PRD.K_ISSUE KI
		INNER JOIN PRD.K_WORK_ORDER WO 
			ON WO.ID_WORK_ORDER = KI.ID_WORK_ORDER
		INNER JOIN PRD.C_PROBLEM_AREA PA 
			ON KI.ID_PROBLEM_AREA = PA.ID_PROBLEM_AREA
		INNER JOIN PRD.C_PROBLEM_CODE PC 
			ON KI.ID_PROBLEM_CODE = PC.ID_PROBLEM_CODE
		INNER JOIN ADM.VW_C_ISSUE_STATUS CIS 
			ON CIS.KY_ISSUE_STATUS = KI.KY_STATUS
		INNER JOIN ADM.C_USER CU 
			ON CU.KY_USER = KI.KY_USER_INVOLVED
		INNER JOIN PRD.C_PRODUCTION_LINE PL 
			ON PL.ID_PRODUCTION_LINE = WO.ID_PRODUCTION_LINE
		INNER JOIN PRD.K_QA27 QA 
			ON QA.ID_QA27 = KI.ID_QA27
		INNER JOIN PRD.K_SHIFT KS
			ON KS.ID_SHIFT = QA.ID_SHIFT
		LEFT JOIN T_ISSUE_PALLET_NEARBY TIPN
			ON KI.ID_ISSUE = TIPN.ID_ISSUE
		WHERE (
				KI.DT_ISSUE  BETWEEN @PIN_DT_INITIAL AND  @PIN_DT_FINAL
				OR @PIN_DT_INITIAL BETWEEN CAST(KI.DT_ISSUE AS DATE) AND CAST(ISNULL(KI.DT_ISSUE_CLOSED, @DT_SYSTEM) AS DATE)
			) AND (@PIN_ID_BRANCH_PLANT IS NULL OR (PL.ID_BRANCH_PLANT = @PIN_ID_BRANCH_PLANT))
			AND (@PIN_ID_PRODUCTION_LINE IS NULL OR (PL.ID_PRODUCTION_LINE = @PIN_ID_PRODUCTION_LINE))
			AND (@PIN_ID_WORK_ORDER IS NULL OR (WO.NO_WORK_ORDER = @PIN_ID_WORK_ORDER))

--			AND KS.ID_SHIFT IS NULL
	ORDER BY KI.DT_ISSUE 

END

