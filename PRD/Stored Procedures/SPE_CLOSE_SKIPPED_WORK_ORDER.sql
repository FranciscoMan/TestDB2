
-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Javier Diaz Barron
-- CREATE date: 01/07/2018
-- Description: Close Work Order
-- =============================================

CREATE PROCEDURE    [PRD].[SPE_CLOSE_SKIPPED_WORK_ORDER] 
	@XML_RESULT XML = '' OUT --0 TO ERROR AND 1 TO CORRECT
	, @PIN_ID_WORK_ORDER INT
	, @PIN_KY_USER_APP_UPDATE NVARCHAR(50)
	, @PIN_NM_PROGRAM_UPDATE NVARCHAR(50)	
AS
BEGIN
	--WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	BEGIN TRY		   			
		DECLARE @V_EXIST_TRAN BIT = 0	
			, @DT_SYSTEM DATETIME = GETDATE()
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) BEGIN
			BEGIN TRANSACTION

			SET @V_EXIST_TRAN = 1
		END	

		DECLARE @V_ID_QA27 INT 

		UPDATE PRD.K_WORK_ORDER
		SET KY_STATUS = 'CLOSED'
			, DT_UPDATE = @DT_SYSTEM
			, KY_USER_APP_UPDATE = @PIN_KY_USER_APP_UPDATE
			, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
		WHERE ID_WORK_ORDER = @PIN_ID_WORK_ORDER
			AND KY_STATUS = 'SKIPPED'
		
		SET @V_ID_QA27 = (
					SELECT  TOP 1 KQA.ID_QA27
					FROM PRD.K_WORK_ORDER WO
						JOIN PRD.K_QA27 KQA 
							ON WO.ID_WORK_ORDER = KQA.ID_WORK_ORDER
					WHERE WO.ID_WORK_ORDER = @PIN_ID_WORK_ORDER
						AND KQA.KY_STATUS = 'RUNNING' 
					ORDER BY KQA.ID_QA27 DESC
				)

		UPDATE PRD.K_QA27
				SET KY_STATUS = 'CLOSED'
					, DT_FINAL_TIME = @DT_SYSTEM
					, DT_UPDATE = @DT_SYSTEM
					, KY_USER_APP_UPDATE = @PIN_KY_USER_APP_UPDATE
					, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
				WHERE ID_QA27 = @V_ID_QA27;

		UPDATE PRD.K_ISSUE
		SET KY_STATUS = 'CLOSED'
			, DT_CONFIRMED = ISNULL(DT_CONFIRMED, @DT_SYSTEM)
			, DT_ISSUE_CLOSED = ISNULL(DT_ISSUE_CLOSED, @DT_SYSTEM)
			, DS_EXPLANATION_EVENT_CLOSED = ISNULL(DS_EXPLANATION_EVENT_CLOSED, 'Closed from skipped WO')
			, DT_UPDATE = @DT_SYSTEM
			, KY_USER_APP_UPDATE = @PIN_KY_USER_APP_UPDATE
			, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
		WHERE ID_WORK_ORDER = @PIN_ID_WORK_ORDER
			AND KY_STATUS != 'CLOSED'


		--WE RETURN A VARIABLE THAT INDICATES THAT EVERYTHING WAS PERFORMED OKAY.
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Se Actualizo el estatus de la notificación satisfactoriamente', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successfully Update of notification status', 'EN')
		
		--IN THIS BLOCK ALL TRANSACTIONS WILL DELETED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1) BEGIN
			COMMIT
		END

	END TRY
	BEGIN CATCH			
		
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1) BEGIN
			ROLLBACK
		END

		SET @XML_RESULT = DBO.F_ERROR_MESSAGES(ERROR_NUMBER(), ERROR_MESSAGE())

		EXECUTE ADM.SPE_RAISE_ERROR
	END CATCH
END

