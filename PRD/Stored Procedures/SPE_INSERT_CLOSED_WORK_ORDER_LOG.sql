-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Vitek - 2019
-- Author: Jose DOnaldo LG
-- CRETAE date: 13/09/2019
-- Description: Insert work order log
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_INSERT_CLOSED_WORK_ORDER_LOG] 
	@XML_RESULT XML = '' OUT ,
	@PIN_WORK_ORDER INT,
	@PIN_DS_EXPLANATION VARCHAR(200),
	@PIN_USER_AUTHORIZER VARCHAR(200),
	@PIN_USER_APP_CREATION VARCHAR(100),
	@PIN_NM_PROGAM_CREATE VARCHAR(100)
AS
BEGIN

	DECLARE
	@DT_SYSTEM DATETIME = GETDATE(),
	@ISUE INT,
	@QA27 INT

	IF OBJECT_ID('tempdb..#WO_CLOSED') IS NOT NULL
	   DROP TABLE #WO_CLOSED
	CREATE TABLE #WO_CLOSED(
	ISSUE INT,
	QA27 int)
	;WITH wo_closed
	as
 	(SELECT K.ID_ISSUE, K.ID_QA27 FROM PRD.K_ISSUE K WHERE K.ID_WORK_ORDER = @PIN_WORK_ORDER AND K.FG_LINE_DOWN = 1)
 INSERT INTO #WO_CLOSED SELECT * FROM wo_closed
 SELECT @ISUE = WC.ISSUE, @QA27 = WC.QA27 FROM #WO_CLOSED WC


 DECLARE @V_EXIST_TRAN BIT = 0

    	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
	INSERT INTO [PRD].[CLOSED_WORK_ORDER_LOG]
	(  ID_WORK_ORDER
      ,DS_EXPLANATION
      ,ID_ISSUE
      ,KY_AUTHORIZER_USER
      ,ID_QA27
      ,DT_CREATION
      ,DT_UPDATE
      ,KY_USER_APP_CREATION
      ,KY_USER_APP_UPDATE
      ,NM_PROGAM_CREATE
      ,NM_PROGRAM_UPDATE)
	VALUES(
	   @PIN_WORK_ORDER
	  ,@PIN_DS_EXPLANATION
      ,@ISUE
      ,@PIN_USER_AUTHORIZER
      ,@QA27
      ,@DT_SYSTEM
      ,null
      ,@PIN_USER_APP_CREATION
      ,null
      ,@PIN_NM_PROGAM_CREATE
      ,null)
	  SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register')
		
			
	END CATCH
END

