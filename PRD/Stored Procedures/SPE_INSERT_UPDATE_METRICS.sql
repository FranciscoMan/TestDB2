-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Javier Diaz Barron
-- CRETAE date: 06/03/2017
-- Description: Insert or update a new Metrics
-- =============================================
CREATE PROCEDURE    [PRD].[SPE_INSERT_UPDATE_METRICS] 
    	 @XML_RESULT XML = '' OUT     -- --0 TO ERROR AND 1 TO CORRECT
		,@PIN_ID_METRICS AS int = NULL
		,@PIN_KY_METRICS AS nvarchar(50) = NULL
		,@PIN_NM_METRICS AS nvarchar(300) = NULL
		,@PIN_KY_FIELD_TYPE AS NVARCHAR(10)= NULL
		,@PIN_FG_ENABLED AS BIT = NULL
		,@PIN_FG_REQUIRED AS BIT = NULL
		,@PIN_DS_TOOLTIP NVARCHAR(1000)= NULL
		,@PIN_ID_BRANCH_PLANT INT = NULL
		,@PIN_NO_ORDER INT = NULL
		,@PIN_XML_FIELD_SETTINGS AS xml = NULL				
		,@PIN_KY_USER_APP AS nvarchar(50)		  
		,@PIN_NM_PROGRAM AS nvarchar(50)		  
		,@PIN_TYPE_TRANSACTION CHAR(1)             --I=INSERT   U=UPDATE

AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
	,@CFE_SISTEMA DATETIME = GETDATE()

    	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF THE SPE IS GOING TO EXECUTE A UPDATE OR INSERT
		IF @PIN_TYPE_TRANSACTION='I'
	    	BEGIN
			--WE INSERT THE REGISTER ON THE TABLE  ADM.C_POSITION

			INSERT INTO PRD.C_METRICS
					   (  [KY_METRICS]
						, [NM_METRICS]
						, [KY_FIELD_TYPE]
						, [FG_ENABLED]
						, [FG_REQUIRED]
						, [DS_TOOLTIP]
						, [NO_ORDER]
						, [ID_BRANCH_PLANT]
						, [XML_FIELD_SETTINGS]
						, [DT_CREATION]
						, [KY_USER_APP_CREATION]
						, [NM_PROGAM_CREATE]						
						
					)
			VALUES
					     (@PIN_KY_METRICS
						, @PIN_NM_METRICS
						, @PIN_KY_FIELD_TYPE
						, @PIN_FG_ENABLED 
						, @PIN_FG_REQUIRED
						, @PIN_DS_TOOLTIP
						, @PIN_NO_ORDER 
						, @PIN_ID_BRANCH_PLANT						
						, @PIN_XML_FIELD_SETTINGS
						, @CFE_SISTEMA
						, @PIN_KY_USER_APP
						, @PIN_NM_PROGRAM						
					)			
		END ELSE BEGIN
			-- WE UPDATE THE REGISTER ON THE TABLE ADM.C_POSITION
			UPDATE PRD.C_METRICS SET
   				  [KY_METRICS] = @PIN_KY_METRICS
				, [NM_METRICS] = @PIN_NM_METRICS
				, [KY_FIELD_TYPE] =@PIN_KY_FIELD_TYPE
				, [FG_ENABLED] = @PIN_FG_ENABLED
				, [FG_REQUIRED] = @PIN_FG_REQUIRED
				, [DS_TOOLTIP] = @PIN_DS_TOOLTIP
				, [ID_BRANCH_PLANT] =@PIN_ID_BRANCH_PLANT
				, [XML_FIELD_SETTINGS] = @PIN_XML_FIELD_SETTINGS
				, [NO_ORDER] = @PIN_NO_ORDER
				, [DT_UPDATE] = @CFE_SISTEMA
				, [KY_USER_APP_UPDATE] = @PIN_KY_USER_APP
				, [NM_PROGRAM_UPDATE] = @PIN_NM_PROGRAM				
			WHERE [ID_METRICS] = @PIN_ID_METRICS
									
		END
		-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register')
		
			
	END CATCH
END

