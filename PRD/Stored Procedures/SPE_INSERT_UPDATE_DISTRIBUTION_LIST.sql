
CREATE PROCEDURE    [PRD].[SPE_INSERT_UPDATE_DISTRIBUTION_LIST]
			@XML_RESULT XML = '' OUT ,   --0 TO ERROR AND 1 TO CORRECT
			@PIN_ID_DISTRIBUTION_LIST INT,
			@PIN_NM_DISTRIBUTION VARCHAR(100),
			@PIN_KY_DISTRIBUTION VARCHAR(100),
			@PIN_ID_TYPE_EVENT INT,
			@PIN_KY_USER_APP_CREATION VARCHAR(20),
			@PIN_KY_USER_APP_UPDATE VARCHAR(20),
			@PIN_NM_PROGAM_CREATE VARCHAR(50),
			@PIN_NM_PROGRAM_UPDATE VARCHAR(50),
			@PIN_TYPE_TRANSACTION CHAR(1)     --I=INSERT   U=UPDATE

AS 
BEGIN  
	----WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
	,@CDT_SISTEMA DATETIME = GETDATE()

    	BEGIN TRY
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF THE SPE IS GOING TO EXECUTE A UPDATE OR INSERT
		IF @PIN_TYPE_TRANSACTION='I'
	    	BEGIN
			--WE INSERT THE REGISTER ON THE TABLE  
			INSERT INTO PRD.K_DISTRIBUTION_LIST(
				--ID_DISTRIBUTION_LIST,
				NM_DISTRIBUTION,
				KY_DISTRIBUTION,
				ID_TYPE_EVENT,
				KY_USER_APP_CREATION,
				NM_PROGAM_CREATE
				)
		values(
			--@PIN_ID_DISTRIBUTION_LIST,
			@PIN_NM_DISTRIBUTION,
			@PIN_KY_DISTRIBUTION,
			@PIN_ID_TYPE_EVENT,
			@PIN_KY_USER_APP_CREATION,
			@PIN_NM_PROGAM_CREATE
			)

END ELSE BEGIN
			-- WE UPDATE THE REGISTER ON THE TABLE 
			UPDATE PRD.K_DISTRIBUTION_LIST SET
				--ID_DISTRIBUTION_LIST = @PIN_ID_DISTRIBUTION_LIST,
				NM_DISTRIBUTION = @PIN_NM_DISTRIBUTION,
				KY_DISTRIBUTION = @PIN_KY_DISTRIBUTION,
				ID_TYPE_EVENT = @PIN_ID_TYPE_EVENT,
				KY_USER_APP_UPDATE = @PIN_KY_USER_APP_UPDATE,
				NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
			WHERE ID_DISTRIBUTION_LIST = @PIN_ID_DISTRIBUTION_LIST

END
		-- WE BACK A RETURN VARIABLE THAT INDICATES ALL WAS PERFORMED OKAY 
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		-- IF THERE IS A TRANSACTION IN THIS BLOCK, IT WILL BE ERASED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
			
		DECLARE @KY_ERROR INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MESSAGE NVARCHAR(250)  = 	 ERROR_MESSAGE()
	
	    SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @KY_ERROR, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR,'Ocurrió un error al procesar el registro')
		SET @XML_RESULT = DBO.F_ERROR_MESSAGES( @KY_ERROR, 'There was an error processing the register')
		
			
	END CATCH
END



