-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CREATE date: 10/03/2017
-- Description: get all users
-- Modifications:
--	JDB	28-03-2017	Validate id_employee
-- =============================================
CREATE PROCEDURE    [ADM].[SPE_GET_USER] 
        @PIN_KY_USER AS nvarchar(50) = NULL,
        @PIN_NM_USER AS nvarchar(300) = NULL,
        @PIN_KY_EMAIL AS nvarchar(500) = NULL,
        @PIN_NM_PASSWORD AS nvarchar(100) = NULL,
        @PIN_DT_CHANGE_PASSWORD AS DATETIME = NULL,
        @PIN_KY_CHANGE_PASSWORD AS nvarchar(100) = NULL,
        @PIN_FG_CHANGE_PASSWORD AS BIT = NULL,
        @PIN_ID_ROLE AS INT = NULL,
        @PIN_ID_EMPLOYEE AS INT = NULL,
        @PIN_FG_ACTIVE AS bit = NULL,
        @PIN_ID_BRANCH_PLANT AS INT = NULL,
        @PIN_DT_INACTIVE AS DATETIME = NULL

AS   
	SELECT 
	CU.[KY_USER],
	CU.[NM_USER],
	CU.[KY_EMAIL],
	CU.[NM_PASSWORD],
	CU.[DT_CHANGE_PASSWORD],
	CU.[KY_CHANGE_PASSWORD],
	CASE CU.[FG_CHANGE_PASSWORD] WHEN 1 THEN 'Yes' ELSE 'No' END AS FG_CHANGE_PASSWORD,
	CU.[ID_ROLE],
	CR.NM_ROLE,
	CR.KY_ROLE,
	isnull(CU.ID_EMPLOYEE,0) ID_EMPLOYEE,
    CONCAT ( CE.NM_FIRST_NAME, ' ',CE.NM_LAST_NAME,' ' )AS NM_EMPLOYEE,
	CE.KY_EMPLOYEE,
	CASE CU.[FG_ACTIVE] WHEN 1 THEN 'Yes' ELSE 'No' END AS FG_ACTIVE,
	CU.[ID_BRANCH_PLANT],
	BP.KY_BRANCH_PLANT,
	ISNULL(BP.NM_BRANCH_PLANT,'All') AS NM_BRANCH_PLANT,
	CU.[DT_INACTIVE]
	FROM ADM.C_USER CU
	LEFT OUTER JOIN ADM.C_ROLE CR ON CR.ID_ROLE = CU.ID_ROLE
	LEFT OUTER JOIN ADM.C_EMPLOYEE CE ON CE.ID_EMPLOYEE = CU.ID_EMPLOYEE
	LEFT OUTER JOIN ADM.C_BRANCH_PLANT BP ON BP.ID_BRANCH_PLANT = CU.ID_BRANCH_PLANT
	WHERE (@PIN_KY_USER IS NULL OR (@PIN_KY_USER IS NOT NULL AND CU.[KY_USER] = @PIN_KY_USER)) AND 
			(@PIN_NM_USER IS NULL OR (@PIN_NM_USER IS NOT NULL AND CU.[NM_USER] = @PIN_NM_USER)) AND 
			(@PIN_KY_EMAIL IS NULL OR (@PIN_KY_EMAIL IS NOT NULL AND CU.[KY_EMAIL] = @PIN_KY_EMAIL)) AND 
    		(@PIN_NM_PASSWORD IS NULL OR (@PIN_NM_PASSWORD IS NOT NULL AND CU.[NM_PASSWORD] = @PIN_NM_PASSWORD)) AND 
			(@PIN_DT_CHANGE_PASSWORD IS NULL OR (@PIN_DT_CHANGE_PASSWORD IS NOT NULL AND CU.[DT_CHANGE_PASSWORD] = @PIN_DT_CHANGE_PASSWORD)) AND
			(@PIN_KY_CHANGE_PASSWORD IS NULL OR (@PIN_KY_CHANGE_PASSWORD IS NOT NULL AND CU.[KY_CHANGE_PASSWORD] = @PIN_KY_CHANGE_PASSWORD)) AND
			(@PIN_FG_CHANGE_PASSWORD IS NULL OR (@PIN_FG_CHANGE_PASSWORD IS NOT NULL AND CU.[FG_CHANGE_PASSWORD] = @PIN_FG_CHANGE_PASSWORD)) AND
			(@PIN_ID_ROLE IS NULL OR (@PIN_ID_ROLE IS NOT NULL AND CU.[ID_ROLE] = @PIN_ID_ROLE)) AND
			(@PIN_ID_EMPLOYEE IS NULL OR (@PIN_ID_EMPLOYEE IS NOT NULL AND CU.[ID_EMPLOYEE] = @PIN_ID_EMPLOYEE)) AND
			(@PIN_FG_ACTIVE IS NULL OR (@PIN_FG_ACTIVE IS NOT NULL AND CU.[FG_ACTIVE] = @PIN_FG_ACTIVE)) AND
			(@PIN_ID_BRANCH_PLANT IS NULL OR (@PIN_ID_BRANCH_PLANT IS NOT NULL AND (CU.ID_BRANCH_PLANT = @PIN_ID_BRANCH_PLANT  OR CU.ID_BRANCH_PLANT IS NULL))) AND
			(@PIN_DT_INACTIVE IS NULL OR (@PIN_DT_INACTIVE IS NOT NULL AND CU.[DT_INACTIVE] = @PIN_DT_INACTIVE))

