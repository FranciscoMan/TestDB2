-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CRETAE date: 28/02/2017
-- Description: Insert a new register on the table S_CONFIGURACION
-- =============================================
CREATE PROCEDURE    [ADM].[SPE_INSERT_UPDATE_CONFIGURATION] 
		  @XML_RESULT XML = '' OUT		    
    	, @PIN_XML_CONFIGURATION AS xml
		, @PIN_FI_LOGOTYPE AS VARBINARY(MAX)
		, @PIN_KY_USER_UPDATE AS nvarchar(50)
		, @PIN_NM_PROGRAM_UPDATE AS nvarchar(50)
		, @PIN_TYPE_TRANSACTION CHAR(1)             --I=INSERCIÓN   A=ACTUALIZACIÓN

AS 
BEGIN  
	-- I DECLARE AND START THE VARIABLE WHAT INDICATE US IF THE TRANSACTION IN THIS SPE
	DECLARE @V_EXIST_TRAN BIT = 0
		, @DT_SYSTEM DATETIME = GETDATE()
		, @ID_FILE INT
		, @NM_FILE NVARCHAR(512)
		, @XML_CONFIGURATION XML = (SELECT TOP 1 XML_CONFIGURATION FROM ADM.S_CONFIGURATION)

    	BEGIN TRY
		--WE VERIFY IF EXISTS A TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE OF TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--WE EDIT THE VARIABLE THAT INDICATES THE TRANSACTION START IN THIS BLOKE IN ORDER TO CANCEL IF ITS NECESARY
			SET @V_EXIST_TRAN = 1
		END	
		--WE VERIFY IF IT INSERTS THE REGISTER O IT WILL UPDATE ACCORDING TO TRANSACTION TYPE'S VARIABLE
		IF @PIN_TYPE_TRANSACTION='I' BEGIN
			--WE INSERT THE REGISTER ON THE TABLE ADM.S_CONFIGURATION
			INSERT INTO ADM.S_CONFIGURATION (XML_CONFIGURATION, KY_USER_UPDATE)
			VALUES (@PIN_XML_CONFIGURATION, @PIN_KY_USER_UPDATE)			
		END ELSE BEGIN

			--WE UPDATE THE REGISTER ON THE TABLE ADM.S_CONFIGURATION
			IF EXISTS(SELECT TOP 1 1 FROM ADM.S_CONFIGURATION)
			BEGIN
			UPDATE ADM.S_CONFIGURATION SET
				XML_CONFIGURATION = @PIN_XML_CONFIGURATION
				, DT_UPDATE = @DT_SYSTEM
				, KY_USER_UPDATE = @PIN_KY_USER_UPDATE
				, NM_PROGRAM_UPDATE = @PIN_NM_PROGRAM_UPDATE
			END
			ELSE
			BEGIN
				INSERT INTO [ADM].[S_CONFIGURATION]
			   ([XML_CONFIGURATION]
			   ,[DT_UPDATE]
			   ,[KY_USER_UPDATE]
			   ,[NM_PROGRAM_UPDATE])
				VALUES
			   (@PIN_XML_CONFIGURATION
			   ,@DT_SYSTEM
			   ,@PIN_KY_USER_UPDATE
			   ,@PIN_NM_PROGRAM_UPDATE)
			END
		END
		--WE BACK THE RETURN VARIABLE INDICATES THAT ALL PERFORMED ALL RIGTH 
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, ERROR_NUMBER(), 'SUCCESSFUL')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Proceso exitoso', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successful Process', 'EN')
		--IF IT CREATES A TRANSACTION IN THIS BLOKE, WE WILL FINISH IT 
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		-- IF OCCURS A ERROR AND IT IS STARTING A TRANSACTION IN THIS BLOKE IT WILL CANCEL THE TRANSACTION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--IT INDICATES IN THE RETURN VARIABLE THAT HAPPEN A ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA		
		DECLARE @ERROR_CLAVE INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = 	 ERROR_MESSAGE()
		
		SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Ocurrió un error al procesar el registro', 'ES')
		SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Occurs a error to process the register.', 'EN')
			
	END CATCH
END

