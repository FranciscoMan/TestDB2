-- =============================================
-- Proyecto: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Juan De Dios Pérez
-- CREATE date: 01/03/2017
-- Description: Delete a POSITION
-- =============================================
CREATE PROCEDURE  [ADM].[SPE_DELETE_POSITION]
	@XML_RESULT XML = '' OUT  ,      --0 TO ERROR AND 1 TO CORRECT
	@PIN_ID_POSITION AS int
AS   
BEGIN
	--WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
	BEGIN TRY		   			
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	

		-----------------
		-- Verify if exists rows associated with that position --
		-- associated, positions_Scaling
		DECLARE @V_ROWS_POSITIONS_SCALING INT = 
		(
			SELECT COUNT(*) FROM PRD.K_POSITION_SCALING
			WHERE ID_POSITION = @PIN_ID_POSITION
		)
		-- associated, scalings
		DECLARE @V_ROWS_SCALING INT = 
		(
			SELECT COUNT(*) FROM PRD.K_SCALING
			WHERE ID_POSITION = @PIN_ID_POSITION
		)
		-- associated, employees
		DECLARE @V_ROWS_EMPLOYEE INT =
		(
			SELECT COUNT(*) FROM ADM.C_EMPLOYEE
			WHERE ID_POSITION = @PIN_ID_POSITION
		)
		
		IF (@V_ROWS_POSITIONS_SCALING > 0 OR @V_ROWS_SCALING > 0 OR @V_ROWS_EMPLOYEE > 0)
		BEGIN
			SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 0, 'SUCCESSFUL OPERATION, WITHOUT DELETE')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Empleados o niveles asociados con la posición', 'ES')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Employees or scalings associated with position', 'EN')
		END

		ELSE
		BEGIN
			-- 1.- DELETE ASSOCIATED FUNCTIONS FROM POSITION
			DELETE FROM ADM.C_POSITION_FUNCTION
			WHERE [ID_POSITION] = @PIN_ID_POSITION

			-- 2.- DELETE THE REGISTER ON THE SQL TABLE ADM.C_POSITION
			DELETE FROM ADM.C_POSITION
			WHERE [ID_POSITION] = @PIN_ID_POSITION

			--WE RETURN A VARIABLE THAT INDICATES THAT EVERYTHING WAS PERFORMED OKAY.
			SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Se eliminó la posicion satisfactoriamente', 'ES')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successfully deleted position', 'EN')
		END
		-----------------
		
		--IN THIS BLOCK ALL TRANSACTIONS WILL DELETED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT				
	END TRY
	BEGIN CATCH			
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
					SET @XML_RESULT = DBO.F_ERROR_MESSAGES(ERROR_NUMBER(), ERROR_MESSAGE())

	END CATCH	
END

