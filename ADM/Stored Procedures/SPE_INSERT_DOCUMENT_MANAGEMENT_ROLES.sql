-- =============================================
-- Proyect: Plaskolite
-- Copyright (c) - Acrux - 2017
-- Author: Julio Díaz
-- CREATE date: 02/02/2018
-- Description: Insert a document-role relationship
-- =============================================
CREATE PROCEDURE    [ADM].[SPE_INSERT_DOCUMENT_MANAGEMENT_ROLES]
	@XML_RESULT		  XML = '' OUT  , 
	@PIN_ID_STREAM AS UNIQUEIDENTIFIER, 
	@PIN_XML_ROLES AS XML, 
	@PIN_KY_USER_APP AS NVARCHAR(50), 
	@PIN_NM_PROGRAM AS NVARCHAR(50) 
AS   
BEGIN
	--WE DECLARE THE STARTED VARIABLE THAT INDICATES IF WE WILL HAVE A TRANSACTION ON SPE
	DECLARE @V_EXIST_TRAN BIT = 0
		, @DT_SYSTEM DATETIME = GETDATE()
	BEGIN TRY		   			
		--WE VERIFY THAT EXISTS A WORKING TRANSACTION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--IN CASE THAT THE TRANSACTION DOESNT START
			BEGIN TRANSACTION
			--IT EDITS THE VARIABLE THAT INDICATES THAT THE TRANSACTION START IN THIS BLOCK TO CANCEL IN ANY MOMENT
			SET @V_EXIST_TRAN = 1
		END	

		IF EXISTS (SELECT TOP 1 1 FROM ADM.FS_DOCUMENT_MANAGEMENT WHERE STREAM_ID = @PIN_ID_STREAM AND IS_DIRECTORY = 0) BEGIN
			DECLARE @T_ROLES TABLE (
				ID_ROLE INT
			)

			INSERT INTO @T_ROLES (ID_ROLE)
			SELECT c.value('@ID_ROLE','INT')
			FROM @PIN_XML_ROLES.nodes('/ROLES/ROLE') AS T(c)

			INSERT INTO ADM.C_DOCUMENT_ROLE (ID_ROLE, ID_STREAM, DT_CREATION, KY_USER_APP_CREATION, NM_PROGRAM_CREATE)
			SELECT CR.ID_ROLE, @PIN_ID_STREAM, @DT_SYSTEM, @PIN_KY_USER_APP, @PIN_NM_PROGRAM
			FROM ADM.C_ROLE CR
			WHERE EXISTS (SELECT TOP 1 1 FROM @T_ROLES TR WHERE TR.ID_ROLE = CR.ID_ROLE)
				AND NOT EXISTS (SELECT TOP 1 1 FROM ADM.C_DOCUMENT_ROLE CDR WHERE CR.ID_ROLE = CDR.ID_ROLE AND CDR.ID_STREAM = @PIN_ID_STREAM)

			--WE RETURN A VARIABLE THAT INDICATES THAT EVERYTHING WAS PERFORMED OKAY.
			SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Se eliminó el item satisfactoriamente', 'ES')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'Successfully roles inserted', 'EN')
		END ELSE BEGIN
			--WE RETURN A VARIABLE THAT INDICATES THAT THERE IS AN ERROR.
			SET @XML_RESULT = DBO.F_ERROR_CREATE_HEADER( @@ROWCOUNT, 1, 'ERROR')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'El nodo seleccionado debe ser un documento', 'ES')
			SET @XML_RESULT = DBO.F_ERROR_INSERT_MESSAGES(@XML_RESULT, 'The selected node must be a document.', 'EN')
		END
		
		--IN THIS BLOCK ALL TRANSACTIONS WILL DELETED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT				
	END TRY
	BEGIN CATCH			
		--IF IT OCCURS A ERROR IN THIS BLOCK THE TRANSACTIO GET CANCELED
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
					SET @XML_RESULT = DBO.F_ERROR_MESSAGES(ERROR_NUMBER(), ERROR_MESSAGE())

	END CATCH	
END

